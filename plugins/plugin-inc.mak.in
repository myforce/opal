#
# Common included Makefile for plug ins
#
# Copyright (C) 2011 Vox Lucida
#
# The contents of this file are subject to the Mozilla Public License
# Version 1.0 (the "License"); you may not use this file except in
# compliance with the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
#
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
# the License for the specific language governing rights and limitations
# under the License.
#
# The Original Code is OPAL.
#
# The Initial Developer of the Original Code is Robert Jongbloed
#
# Contributor(s): ______________________________________.
#
# $Revision$
# $Author$
# $Date$
#

prefix        := @prefix@
exec_prefix   := @exec_prefix@
libdir        := @libdir@
target        := @target@

CC            := @CC@
CXX           := @CXX@
LD            := @LD@
AR            := @AR@
INSTALL       := @INSTALL@
CPPFLAGS      := @CPPFLAGS@ @SHARED_CPPFLAGS@ -I@prefix@/include -I$(PLUGIN_SRC_DIR)/../include -I$(PLUGIN_SRC_DIR) $(CPPFLAGS)
CXXFLAGS      := @CXXFLAGS@ $(CXXFLAGS)
CFLAGS        := @CFLAGS@ $(CFLAGS)
LDFLAGS       := @LDFLAGS@ $(LDFLAGS)
ARFLAGS       := @ARFLAGS@
SHARED_LDFLAGS:= @SHARED_LDFLAGS@
SHAREDLIBEXT  :=@SHAREDLIBEXT@

ifeq ($(DEBUG_BUILD),yes)
  CFLAGS      += -g
endif

OBJDIR := $(PLUGIN_SRC_DIR)/../lib_@target@/plugins/$(BASENAME)

SONAME	= $(BASENAME)_ptplugin

PLUGIN_NAME = $(SONAME).$(SHAREDLIBEXT)
PLUGIN_PATH = $(OBJDIR)/$(PLUGIN_NAME)

all: $(PLUGIN_PATH)


ifeq ($V$(VERBOSE),)
Q_CC = @echo [CC] `echo $< | sed s^$(SRCDIR)/^^` ;
Q_LD = @echo [LD] `echo $@ | sed s^$(OBJDIR)/^^` ;
endif


vpath	%.o $(OBJDIR)
vpath	%.c $(SRCDIR)
vpath	%.cxx $(SRCDIR)

$(OBJDIR)/%.o : %.c
	@mkdir -p $(OBJDIR) >/dev/null 2>&1
	$(Q_CC)$(CC) -c $(CPPFLAGS) $(CFLAGS) -o $@ $<

$(OBJDIR)/%.o : %.cxx
	@mkdir -p $(OBJDIR) >/dev/null 2>&1
	$(Q_CC)$(CXX) -c $(CPPFLAGS) $(CXXFLAGS) -o $@ $<

$(OBJDIR)/%.o : %.cpp
	@mkdir -p $(OBJDIR) >/dev/null 2>&1
	$(Q_CC)$(CXX) -c $(CPPFLAGS) $(CXXFLAGS) -o $@ $<

OBJECTS	= $(addprefix $(OBJDIR)/,$(patsubst %.cxx,%.o,$(patsubst %.cpp,%.o,$(patsubst %.c,%.o,$(notdir $(SRCS))))))

$(PLUGIN_PATH): $(SUBDIRS) $(OBJECTS)
	$(Q_LD)$(CXX) -o $@ $(OBJECTS) $(SHARED_LDFLAGS:INSERT_SONAME=$(SONAME)) $(LDFLAGS) $(LIBS)

ifneq ($(SUBDIRS),)
export CC CXX LD AR RANLIB CPPFLAGS CFLAGS CXXFLAGS LDFLAGS ARFLAGS target target_os target_cpu
.PHONY: $(SUBDIRS)
$(SUBDIRS):
	$(MAKE) -C $@
endif

install:
	@$(foreach dir,$(SUBDIRS),if test -d ${dir} ; then $(MAKE) -C $(dir) install; fi ; )
	mkdir -p $(DESTDIR)$(libdir)/$(INSTALL_DIR)
	$(INSTALL) $(PLUGIN_PATH) $(DESTDIR)$(libdir)/$(INSTALL_DIR)

uninstall:
	@$(foreach dir,$(SUBDIRS),if test -d ${dir} ; then $(MAKE) -C $(dir) uninstall; fi ; )
	rm -f $(DESTDIR)$(libdir)/$(INSTALL_DIR)/$(PLUGIN_NAME)

clean:
	@$(foreach dir,$(SUBDIRS),if test -d ${dir} ; then $(MAKE) -C $(dir) clean; fi ; )
	rm -rf $(OBJDIR)

###########################################
