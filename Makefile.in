#
# Makefile
#
# Make file for Open Phone Abstraction library
#
# Copyright (c) 2001 Equivalence Pty. Ltd.
#
# The contents of this file are subject to the Mozilla Public License
# Version 1.0 (the "License"); you may not use this file except in
# compliance with the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
#
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
# the License for the specific language governing rights and limitations
# under the License.
#
# The Original Code is Open Phone Abstraction Library.
#
# The Initial Developer of the Original Code is Equivalence Pty. Ltd.
#
# Contributor(s): ______________________________________.
#
# $Log: Makefile.in,v $
# Revision 1.43  2006/10/02 13:30:50  rjongbloed
# Added LID plug ins
#
# Revision 1.42  2006/09/18 08:41:53  rjongbloed
# Added simple OPAL sample to default build.
# Added check that Makefile may need to be rebuilt from configure script.
#
# Revision 1.41  2006/09/11 20:44:17  dereksmithies
# Fix spacing at end of line for two iax files.
#
# Revision 1.40  2006/09/11 20:13:36  dsandras
# Fixed IAX2 build thanks to Stephen Cook <siti orcon net nz>.
#
# Revision 1.39  2006/09/07 10:05:55  rjongbloed
# Added "make update" target to do cvs update and rebuild
#
# Revision 1.38  2006/08/15 19:41:38  dsandras
# Only build plugins when building the library.
#
# Revision 1.37  2006/08/09 23:14:00  dereksmithies
# Add fix for compiling new iax processing files.
# Big thanks to Stephen Cook, (sitiveni@gmail.com) for this work.
# Thanks also for the Google Summer of Code.
#
# Revision 1.36  2006/08/08 09:16:47  rjongbloed
# Fixed building of audio plugins on linux
#
# Revision 1.35  2006/08/03 12:43:52  csoutheren
# Fixed compilation on Linux
#
# Revision 1.34  2006/07/24 14:03:38  csoutheren
# Merged in audio and video plugins from CVS branch PluginBranch
#
# Revision 1.33  2006/06/08 07:03:16  csoutheren
# Changed to force docs to build even when docs directory exists
#
# Revision 1.32  2006/05/30 12:04:08  hfriederich
# Enabling to build H.460
#
# Revision 1.31  2006/04/22 14:05:47  dsandras
# When building a shared library x that references symbols in libraries y,
# the y libraries need to be added to the linker command always. Thanks to
# Vitaly Lipatov. (Fixes Ekiga report #338310).
#
# Revision 1.30  2006/04/20 16:56:41  hfriederich
# Changes to allow compilation of H.224/H.281 code as well as to disable H.224 entirely
#
# Revision 1.29  2006/04/17 00:06:26  csoutheren
# Allow ILBC codec to be disabled and detect if not present
#
# Revision 1.28.2.1  2006/05/16 07:03:09  csoutheren
# Fixed Linux compile system
#
# Revision 1.28  2006/02/01 22:42:55  dominance
# ensure we have the full disctinct SONAME instead of just the major number version.
#
# Revision 1.27  2006/01/30 02:23:15  csoutheren
# First cut at fixing problem with speex libraries
#
# Revision 1.26  2006/01/20 00:00:59  csoutheren
# Added protected against some source directories not being present
# even wen configuration says they should be
#
# Revision 1.25  2006/01/19 22:40:33  dereksmithies
# Add iax2 to the list of instal directories. Thanks to Damien Sandras
# for reporting the bug in iax2 compilation.
#
# Revision 1.24  2006/01/18 11:26:29  dsandras
# Reverted previous change.
#
# Revision 1.22  2006/01/14 10:43:06  dsandras
# Applied patch from Brian Lu <Brian.Lu _AT_____ sun.com> to allow compilation
# with OpenSolaris compiler. Many thanks !!!
#
# Revision 1.21  2006/01/07 17:37:50  dsandras
# Updated to speex 1.1.11.2 to fix divergeance issues.
#
# Revision 1.20  2006/01/01 19:19:32  dsandras
# Added RFC2190 H.263 codec thanks to Salyens. Many thanks!
#
# Revision 1.19  2005/12/06 06:34:10  csoutheren
# Added configure support for Sangoma and empty LID source and header files
#
# Revision 1.18  2005/11/24 20:31:54  dsandras
# Added support for echo cancelation using Speex.
# Added possibility to add a filter to an OpalMediaPatch for all patches of a connection.
#
# Revision 1.17  2005/11/23 22:01:37  dsandras
# Reverted previous change. echocancel.cxx is not ready to go in yet.
#
# Revision 1.16  2005/11/23 21:58:33  dsandras
# Fixed Makefile.in.
#
# Revision 1.15  2005/11/20 21:03:50  dsandras
# Upgraded to Speex 1.1.10.
#
# Revision 1.14  2005/09/13 20:48:22  dominance
# minor cleanups needed to support mingw compilation. Thanks goes to Julien Puydt.
#
# Revision 1.13  2005/08/10 11:07:14  csoutheren
# Fixed bug #1255554
# Fixed dynamic linking on MacOSX
# Thanks to Hannes Friederich
#
# Revision 1.12  2005/07/30 07:39:26  csoutheren
# Added support for compiling new IAX2 code
#
# Revision 1.11  2005/04/26 10:58:37  dsandras
# Committed workaround for "make install".
#
# Revision 1.10  2005/04/25 10:14:14  dsandras
# Move LIBDIR down due to conflicting names.
#
# Revision 1.9  2005/04/25 09:31:35  dsandras
# Fixed make.
#
# Revision 1.8  2005/04/25 09:07:58  dsandras
# Fixed install/uninstall.
#
# Revision 1.7  2005/04/21 01:05:55  csoutheren
# New fix from Peter Robinson
#
# Revision 1.6  2005/04/20 05:46:32  csoutheren
# Patch 1146010. Fix problem with install targets
# Thanks to Peter Robinson
#
# Revision 1.5  2005/04/11 10:41:05  dsandras
# Added patch from Georgi Georgiev to fix compilation issues on Athlon64.
#
# Revision 1.4  2005/02/27 22:03:39  dereksmithies
# Add target to generate docs with doxygen.
#
# Revision 1.3  2005/01/31 07:40:41  csoutheren
# Fix for MacOSX thanks to Hannes Friederich
#
# Revision 1.2  2004/12/05 18:14:20  dsandras
# Cleanups.
#
# Revision 1.1  2004/12/04 18:37:58  dsandras
# Ported the "make install" / "make uninstall" system from OpenH323 to OPAL.
#
# Revision 2.29  2004/06/04 05:29:28  csoutheren
# Updated for ASN file changes and added silencedetect.cxx
#
# Revision 2.28  2004/04/25 02:53:28  rjongbloed
# Fixed GNU 3.4 warnings
#
# Revision 2.27  2004/03/11 06:54:25  csoutheren
# Added ability to disable SIP or H.323 stacks
#
# Revision 2.26  2004/02/23 01:28:49  rjongbloed
# Fixed unix build for recent upgrade to OpenH323 latest code.
#
# Revision 2.25  2004/02/16 09:15:19  csoutheren
# Fixed problems with codecs on Unix systems
#
# Revision 2.24  2003/04/08 11:46:35  robertj
# Better portability for tr command when doing ASN parse.
#
# Revision 2.23  2003/04/08 06:09:19  robertj
# Fixed ASN compilation so do not need -I on compile line for asn includes.
#
# Revision 2.22  2003/04/02 06:52:04  robertj
# Added dependencies for H450 ASN files
#
# Revision 2.21  2003/03/26 02:49:00  robertj
# Added service/daemon sample application.
#
# Revision 2.20  2003/03/19 04:45:29  robertj
# Added opalvxml to build
#
# Revision 2.19  2003/03/18 23:09:37  robertj
# Fixed LD_LIBRARY_PATH issue with Solaris
#
# Revision 2.18  2003/03/17 23:08:41  robertj
# Added IVR endpoint
#
# Revision 2.17  2003/03/17 22:36:38  robertj
# Added video support.
#
# Revision 2.16  2003/01/15 00:08:18  robertj
# Updated to OpenH323 v1.10.3
#
# Revision 2.15  2002/11/12 12:06:34  robertj
# Fixed Solaris compatibility
#
# Revision 2.14  2002/11/11 07:43:32  robertj
# Added speex codec files
#
# Revision 2.13  2002/09/11 05:56:16  robertj
# Fixed double inclusion of common.mak
# Added opalwavfile.cxx module
#
# Revision 2.12  2002/03/15 10:51:53  robertj
# Fixed problem with recursive inclusion on make files.
#
# Revision 2.11  2002/03/05 06:27:34  robertj
# Added ASN parser build and version check code.
#
# Revision 2.10  2002/02/22 04:16:25  robertj
# Added G.726 codec and fixed the lpc10 and GSM codecs.
#
# Revision 2.9  2002/02/11 09:38:28  robertj
# Moved version to root directory
#
# Revision 2.8  2002/02/06 11:52:53  rogerh
# Move -I$(ASN_INCDIR) so Opal's ldap.h is found instead of the OS's ldap.h
#
# Revision 2.7  2002/02/01 10:29:35  rogerh
# Use the right version.h file. (the other one had comments which confused
# pwlib's lib.mak)
#
# Revision 2.6  2002/02/01 04:58:23  craigs
# Added sip directory to VPATH
#
# Revision 2.5  2002/02/01 04:53:01  robertj
# Added (very primitive!) SIP support.
#
# Revision 2.4  2002/02/01 00:19:20  robertj
# Updated to latest pwlilb.
# Added rfc2833 module
#
# Revision 2.3  2001/08/17 05:24:22  robertj
# Updates from OpenH323 v1.6.0 release.
#
# Revision 2.2  2001/08/01 06:22:55  robertj
# Major changes to H.323 capabilities, uses OpalMediaFormat for base name.
# Added G.711 transcoder.
#
# Revision 2.1  2001/07/30 03:41:20  robertj
# Added build of subdirectories for samples.
# Hid the asnparser.version file.
# Changed default OPALDIR variable to be current directory.
#
# Revision 2.0  2001/07/27 15:48:24  robertj
# Conversion of OpenH323 to Open Phone Abstraction Library (OPAL)
#

export OPALDIR=@OPALDIR@

INSTALL=@INSTALL@

default :: optshared

all :: bothdepend both

update:
	cvs -q update
	$(MAKE) all


SUBDIRS := plugins samples/simple

LIBRARY_MAKEFILE:=1

include $(OPALDIR)/opal_inc.mak

PREFIX=@INSTALLPREFIX@/
exec_prefix = ${PREFIX}

ifndef PREFIX
PREFIX=/usr/local
endif

ifeq ($(USE_GCC),yes)
ANSI_FLAG = -ansi
endif

OPAL_OBJDIR = $(OPAL_LIBDIR)/$(PT_OBJBASE)
ifdef NOTRACE
OPAL_OBJDIR += n
endif

OBJDIR	=	$(OPAL_OBJDIR)
LIBDIR  =	$(OPAL_LIBDIR)
TARGET	=	$(OPAL_LIBDIR)/$(OPAL_FILE)

STDCCFLAGS += @STDCCFLAGS@

ifdef NOTRACE
STDCCFLAGS += -DPASN_NOPRINTON
else
STDCCFLAGS += -DPTRACING
endif

VPATH_CXX := $(OPAL_SRCDIR)/opal \
	     $(OPAL_SRCDIR)/rtp \
	     $(OPAL_SRCDIR)/lids \
	     $(OPAL_SRCDIR)/codec 

ifneq (,$(wildcard src/iax2))
IAX2_AVAIL = 1
VPATH_CXX += $(OPAL_SRCDIR)/iax2 
endif

ifneq (,$(wildcard src/sip))
SIP_AVAIL = 1
VPATH_CXX += $(OPAL_SRCDIR)/sip
endif

ifneq (,$(wildcard src/h323))
H323_AVAIL = 1
VPATH_CXX += $(OPAL_SRCDIR)/h323 \
	     $(OPAL_SRCDIR)/t120 \
	     $(OPAL_SRCDIR)/t38 \
	     $(OPAL_SRCDIR)/asn 
endif

ifneq (,$(wildcard src/h224))
H224_AVAIL = 1
VPATH_CXX += $(OPAL_SRCDIR)/h224

endif

VPATH_C := $(OPAL_SRCDIR)/codec

########################################
# Source files for library

SOURCES := $(OPAL_SRCDIR)/opal/manager.cxx \
           $(OPAL_SRCDIR)/opal/endpoint.cxx \
           $(OPAL_SRCDIR)/opal/connection.cxx \
           $(OPAL_SRCDIR)/opal/call.cxx \
           $(OPAL_SRCDIR)/opal/mediafmt.cxx \
           $(OPAL_SRCDIR)/opal/mediastrm.cxx \
           $(OPAL_SRCDIR)/opal/patch.cxx \
           $(OPAL_SRCDIR)/opal/transcoders.cxx \
           $(OPAL_SRCDIR)/opal/transports.cxx \
           $(OPAL_SRCDIR)/opal/guid.cxx \
	   $(OPAL_SRCDIR)/opal/opalglobalstatics.cxx \
           $(OPAL_SRCDIR)/opal/pcss.cxx \
           $(OPAL_SRCDIR)/opal/ivr.cxx \
           $(OPAL_SRCDIR)/opal/opalvxml.cxx \
           $(OPAL_SRCDIR)/rtp/rtp.cxx \
           $(OPAL_SRCDIR)/rtp/jitter.cxx \

########################################

# H.323 files

ifeq ($(OPAL_H323),1)
ifdef H323_AVAIL

ASN_SRCDIR := $(OPAL_SRCDIR)/asn
ASN_INCDIR := $(OPAL_INCDIR)/asn

H450_ASN_FILES := h4501 h4502 h4503 h4504 h4505 h4506 h4507 h4508 h4509 h45010 h45011
SIMPLE_ASN_FILES := x880 $(H450_ASN_FILES) mcs gcc t38 

ASN_H_FILES   := $(addprefix $(ASN_INCDIR)/,$(addsuffix .h,  $(SIMPLE_ASN_FILES)))
ASN_CXX_FILES := $(addprefix $(ASN_SRCDIR)/,$(addsuffix .cxx,$(SIMPLE_ASN_FILES)))

ASN_H_FILES   += $(ASN_INCDIR)/h225.h
ASN_CXX_FILES += $(ASN_SRCDIR)/h225_1.cxx $(ASN_SRCDIR)/h225_2.cxx

ASN_H_FILES   += $(ASN_INCDIR)/h235.h $(ASN_SRCDIR)/h235_t.cxx
ASN_CXX_FILES += $(ASN_SRCDIR)/h235.cxx

ASN_H_FILES   += $(ASN_INCDIR)/h245.h
ASN_CXX_FILES += $(ASN_SRCDIR)/h245_1.cxx $(ASN_SRCDIR)/h245_2.cxx $(ASN_SRCDIR)/h245_3.cxx

ASN_H_FILES   += $(ASN_INCDIR)/h248.h
ASN_CXX_FILES += $(ASN_SRCDIR)/h248.cxx

ASN_H_FILES   += $(ASN_INCDIR)/h501.h
ASN_CXX_FILES += $(ASN_SRCDIR)/h501.cxx

.PRECIOUS: $(ASN_CXX_FILES) $(ASN_H_FILES)


SOURCES += $(ASN_CXX_FILES) \
           $(OPAL_SRCDIR)/h323/h323ep.cxx \
           $(OPAL_SRCDIR)/h323/h323.cxx \
           $(OPAL_SRCDIR)/h323/h323caps.cxx \
           $(OPAL_SRCDIR)/h323/h323neg.cxx \
           $(OPAL_SRCDIR)/h323/h323pdu.cxx \
           $(OPAL_SRCDIR)/h323/h323rtp.cxx \
           $(OPAL_SRCDIR)/h323/channels.cxx \
           $(OPAL_SRCDIR)/h323/svcctrl.cxx \
           $(OPAL_SRCDIR)/h323/h450pdu.cxx \
           $(OPAL_SRCDIR)/h323/q931.cxx \
           $(OPAL_SRCDIR)/h323/transaddr.cxx \
           $(OPAL_SRCDIR)/h323/gkclient.cxx \
           $(OPAL_SRCDIR)/h323/gkserver.cxx \
           $(OPAL_SRCDIR)/h323/h225ras.cxx \
           $(OPAL_SRCDIR)/h323/h323trans.cxx \
           $(OPAL_SRCDIR)/h323/h235auth.cxx \
           $(OPAL_SRCDIR)/h323/h501pdu.cxx \
           $(OPAL_SRCDIR)/h323/h323annexg.cxx \
           $(OPAL_SRCDIR)/h323/peclient.cxx \
           
ifdef H323_H460
SOURCES += $(OPAL_SRCDIR)/h323/h4601.cxx
endif

ifdef HAS_OPENSSL
SOURCES += $(OPAL_SRCDIR)/h235auth1.cxx
endif

SOURCES += $(OPAL_SRCDIR)/t120/t120proto.cxx \
           $(OPAL_SRCDIR)/t120/h323t120.cxx \
           $(OPAL_SRCDIR)/t120/x224.cxx \
           $(OPAL_SRCDIR)/t38/t38proto.cxx \
           $(OPAL_SRCDIR)/t38/h323t38.cxx

ifeq ($(OPAL_H224), 1)
ifdef H224_AVAIL
SOURCES += $(OPAL_SRCDIR)/h224/h323h224.cxx
endif
endif

endif
endif

##################
# IAX2 files

ifeq ($(OPAL_IAX2),1)
ifdef IAX2_AVAIL

SOURCES += \
           $(OPAL_SRCDIR)/iax2/callprocessor.cxx \
	   $(OPAL_SRCDIR)/iax2/specialprocessor.cxx \
           $(OPAL_SRCDIR)/iax2/frame.cxx \
           $(OPAL_SRCDIR)/iax2/iax2con.cxx \
           $(OPAL_SRCDIR)/iax2/iax2ep.cxx \
           $(OPAL_SRCDIR)/iax2/iax2medstrm.cxx \
           $(OPAL_SRCDIR)/iax2/iedata.cxx \
           $(OPAL_SRCDIR)/iax2/ies.cxx \
           $(OPAL_SRCDIR)/iax2/processor.cxx \
           $(OPAL_SRCDIR)/iax2/receiver.cxx \
           $(OPAL_SRCDIR)/iax2/regprocessor.cxx\
           $(OPAL_SRCDIR)/iax2/remote.cxx \
           $(OPAL_SRCDIR)/iax2/safestrings.cxx \
           $(OPAL_SRCDIR)/iax2/sound.cxx \
           $(OPAL_SRCDIR)/iax2/transmit.cxx 
endif
endif

################################################################################
# SIP files

ifeq ($(OPAL_SIP),1)
ifdef SIP_AVAIL

SOURCES += $(OPAL_SRCDIR)/sip/sipep.cxx \
           $(OPAL_SRCDIR)/sip/sipcon.cxx \
           $(OPAL_SRCDIR)/sip/sippdu.cxx \
           $(OPAL_SRCDIR)/sip/sdp.cxx \

endif
endif

##################
# H.224 files

ifeq ($(OPAL_H224), 1)
ifdef H224_AVAIL

SOURCES += $(OPAL_SRCDIR)/h224/q922.cxx \
		   $(OPAL_SRCDIR)/h224/h224.cxx \
		   $(OPAL_SRCDIR)/h224/h281.cxx
endif
endif

##################
# LIDS

SOURCES += $(OPAL_SRCDIR)/lids/lid.cxx \
           $(OPAL_SRCDIR)/lids/lidep.cxx \
           $(OPAL_SRCDIR)/lids/lidpluginmgr.cxx \


##################
# Software codecs

SOURCES += $(OPAL_SRCDIR)/codec/g711codec.cxx \
           $(OPAL_SRCDIR)/codec/g711.c \
           $(OPAL_SRCDIR)/codec/rfc2833.cxx \
           $(OPAL_SRCDIR)/codec/vidcodec.cxx \
           $(OPAL_SRCDIR)/codec/opalwavfile.cxx \
	   $(OPAL_SRCDIR)/codec/silencedetect.cxx \
	   $(OPAL_SRCDIR)/codec/echocancel.cxx \
	   $(OPAL_SRCDIR)/codec/opalpluginmgr.cxx

SPEEX_DIR       = $(OPAL_SRCDIR)/codec/speex

#HEADER_FILES    += $(OPAL_INCDIR)/speexcodec.h

#SOURCES        += $(OPAL_SRCDIR)/codec/speexcodec.cxx

ifdef OPAL_SYSTEM_SPEEX

ENDLDLIBS       := -lspeex $(ENDLDLIBS)

else

SPEEX_INCDIR    = $(SPEEX_DIR)/libspeex
SPEEX_SRCDIR    = $(SPEEX_DIR)/libspeex

VPATH_C         += $(SPEEX_SRCDIR)
VPATH_CXX       += $(SPEEX_SRCDIR)

HEADER_FILES    += $(SPEEX_INCDIR)/speex.h \
		   $(SPEEX_INCDIR)/speex_bits.h \
		   $(SPEEX_INCDIR)/speex_header.h \
		   $(SPEEX_INCDIR)/speex_callbacks.h \
		   $(SPEEX_INCDIR)/speex_config_types.h \
		   $(SPEEX_INCDIR)/speex_preprocess.h \
		   $(SPEEX_INCDIR)/speex_stereo.h \
		   $(SPEEX_INCDIR)/speex_types.h \
		   $(SPEEX_INCDIR)/speex_jitter.h \
		   $(SPEEX_INCDIR)/speex_echo.h

SOURCES         += $(SPEEX_SRCDIR)/speex_preprocess.c \
		   $(SPEEX_SRCDIR)/smallft.c \
                   $(SPEEX_SRCDIR)/misc.c \
                   $(SPEEX_SRCDIR)/mdf.c \
                   $(SPEEX_SRCDIR)/math_approx.c \
                   $(SPEEX_SRCDIR)/kiss_fftr.c \
                   $(SPEEX_SRCDIR)/kiss_fft.c \
                   $(SPEEX_SRCDIR)/fftwrap.c \

endif # OPAL_SYSTEM_SPEEX

#
# Files to be cleaned during make clean
#

CLEAN_FILES = $(OPAL_LIB) 


####################################################

include @PWLIBDIR@/make/common.mak

####################################################
# replace lib.mak

ifneq ($(OSTYPE),Darwin)
  LIBNAME_MAJ	= $(OPAL_FILE).$(MAJOR_VERSION)
  LIBNAME_MIN	= $(LIBNAME_MAJ).$(MINOR_VERSION)
  ifeq ($(BUILD_TYPE),.)
    LIBNAME_PAT	= $(LIBNAME_MIN).$(BUILD_NUMBER)
  else
    LIBNAME_PAT	= $(LIBNAME_MIN)-$(BUILD_TYPE)$(BUILD_NUMBER)
  endif
else
  LIBNAME_MAJ	= $(subst .$(LIB_SUFFIX),.$(MAJOR_VERSION).$(LIB_SUFFIX),$(OPAL_FILE))
  LIBNAME_MIN	= $(subst .$(LIB_SUFFIX),.$(MAJOR_VERSION).$(MINOR_VERSION).$(LIB_SUFFIX),$(OPAL_FILE))
  ifeq ($(BUILD_TYPE),.)
    LIBNAME_PAT	= $(subst .$(LIB_SUFFIX),.$(MAJOR_VERSION).$(MINOR_VERSION).$(BUILD_NUMBER).$(LIB_SUFFIX),$(OPAL_FILE))
  else
    LIBNAME_PAT	= $(subst .$(LIB_SUFFIX),.$(MAJOR_VERSION).$(MINOR_VERSION)-$(BUILD_TYPE)$(BUILD_NUMBER).$(LIB_SUFFIX),$(OPAL_FILE))
  endif
endif

LIB_SONAME	= $(LIBNAME_MIN)

CLEAN_FILES += $(LIBDIR)/$(LIBNAME_PAT) $(LIBDIR)/$(OPAL_FILE) $(LIBDIR)/$(LIBNAME_MAJ) $(LIBDIR)/$(LIBNAME_MIN)

ifneq ($(P_SHAREDLIB),1)
  STATIC_LIB_FILE = $(LIBDIR)/$(OPAL_FILE)
else
  STATIC_LIB_FILE = $(LIBDIR)/$(subst .$(LIB_SUFFIX),_s.$(STATICLIBEXT),$(OPAL_FILE))
endif

$(LIBDIR)/$(OPAL_FILE) : $(TARGETLIB)

ifeq ($(P_SHAREDLIB),1)

  SYSLIBS += -L$(PW_LIBDIR) -l$(PTLIB_BASE)$(LIB_TYPE)
  ifeq ($(OSTYPE),beos)
    # BeOS requires different options when building shared libraries
    LDSOOPTS = -nostdlib -nostart
    EXTLIBS = -lstdc++.r4
  else
    ifeq ($(OSTYPE),Darwin)
      LDSOOPTS = -dynamiclib
    else
      LDSOOPTS = -shared
    endif
  endif
  
  ENDLDLIBS := $(SYSLIBS) $(ENDLDLIBS)

  ifeq ($(OSTYPE),rtems)
    EXTLIBS = -lstdc++
  endif

  ifneq ($(OSTYPE), QNX)
    ifneq (,$(findstring $(OSTYPE),FreeBSD OpenBSDs))
      ifdef P_PTHREADS
        EXTLIBS += -pthread
      endif
    else
      ifdef P_PTHREADS
        EXTLIBS += -lpthread
      endif
    endif
  endif

  # Solaris loader doesn't grok -soname  (sees it as -s -oname)
  # We could use -Wl,-h,$(LIB_BASENAME).1 but then we find that the arglist
  # to gcc is 2900+ bytes long and it will barf.  I fix this by invoking ld
  # directly and passing it the equivalent arguments...jpd@louisiana.edu
  ifeq ($(OSTYPE),solaris)
     LDSOOPTS = -Bdynamic -G -h $(LIB_SONAME)
     LD = $(CPLUS)
  else
    ifeq ($(OSTYPE),mingw)
      LDSOOPTS += -Wl,--kill-at
    else
    ifneq ($(OSTYPE),Darwin)
      LDSOOPTS += -Wl,-soname,$(LIB_SONAME)
    endif
    endif
    LD = $(CPLUS)
  endif

  $(LIBDIR)/$(OPAL_FILE): $(LIBDIR)/$(LIBNAME_PAT)
	cd $(LIBDIR) ; rm -f $(OPAL_FILE) ; ln -sf $(LIBNAME_PAT) $(OPAL_FILE)
	cd $(LIBDIR) ; rm -f $(LIBNAME_MAJ) ;  ln -sf $(LIBNAME_PAT) $(LIBNAME_MAJ)
	cd $(LIBDIR) ; rm -f $(LIBNAME_MIN) ;  ln -sf $(LIBNAME_PAT) $(LIBNAME_MIN)

  $(LIBDIR)/$(LIBNAME_PAT): $(STATIC_LIB_FILE)
	@echo EXTLIBS = $(EXTLIBS)
	@echo SYSLIBS = $(SYSLIBS)
	@if [ ! -d $(LIBDIR) ] ; then mkdir $(LIBDIR) ; fi
	$(LD) $(LDSOOPTS) -o $(LIBDIR)/$(LIBNAME_PAT) $(LDFLAGS) $(EXTLIBS) $(OBJS) $(ENDLDLIBS)

endif # P_SHAREDLIB

$(STATIC_LIB_FILE): $(OBJS)
	@if [ ! -d $(LIBDIR) ] ; then mkdir $(LIBDIR) ; fi
	$(ARCHIVE) $(STATIC_LIB_FILE) $(OBJS)
ifeq ($(P_USE_RANLIB),1)
	$(RANLIB) $(STATIC_LIB_FILE)
endif

####################################################

notrace::
	$(MAKE) NOTRACE=1 opt

# Build rules for the Speex codec

$(OPAL_OBJDIR)/%.o : $(SPEEX_SRCDIR)/%.c
	@if [ ! -d $(OPAL_OBJDIR) ] ; then mkdir -p $(OPAL_OBJDIR) ; fi
	$(CC) $(STDCCFLAGS) -I$(SPEEX_INCDIR) $(OPTCCFLAGS) $(CFLAGS) -c $< -o $@

$(DEPDIR)/%.dep : $(SPEEX_SRCDIR)/%.c
	@if [ ! -d $(DEPDIR) ] ; then mkdir -p $(DEPDIR) ; fi
	@printf %s $(OPAL_OBJDIR)/ > $@
	$(CC) -I$(SPEEX_INCDIR) $(CFLAGS) -M $< >> $@

###############################################################################
#### Subdirectories
$(subst tagbuild,,$(STANDARD_TARGETS)) ::
	@set -e; $(foreach dir,$(SUBDIRS),$(MAKE) -C $(dir) $@;)


$(STANDARD_TARGETS) :: Makefile

Makefile: Makefile.in configure
	@echo
	@echo "*******************************************************"
	@echo Makefile is not up to date, is a ./configure necessary?
	@echo "*******************************************************"
	@false

test:
	@echo $(ASN_CXX_FILES)

#### Install targets
install:
	mkdir -p $(DESTDIR)@LIBDIR@
	( for dir in $(DESTDIR)@LIBDIR@ \
		     $(DESTDIR)$(PREFIX)/include/opal/asn \
		     $(DESTDIR)$(PREFIX)/include/opal/codec \
		     $(DESTDIR)$(PREFIX)/include/opal/h323 \
		     $(DESTDIR)$(PREFIX)/include/opal/iax2 \
		     $(DESTDIR)$(PREFIX)/include/opal/lids \
		     $(DESTDIR)$(PREFIX)/include/opal/opal \
		     $(DESTDIR)$(PREFIX)/include/opal/rtp \
		     $(DESTDIR)$(PREFIX)/include/opal/sip \
		     $(DESTDIR)$(PREFIX)/include/opal/t120 \
		     $(DESTDIR)$(PREFIX)/include/opal/t38 \
		     $(DESTDIR)$(PREFIX)/share/opal ;\
		do mkdir -p $$dir ; chmod 755 $$dir ; \
	done)
	$(INSTALL) -m 755 lib/$(LIBNAME_PAT) $(DESTDIR)@LIBDIR@
	ln -snf $(LIBNAME_PAT) \
		$(DESTDIR)@LIBDIR@/$(OPAL_FILE).$(MAJOR_VERSION).$(MINOR_VERSION)
	ln -snf $(LIBNAME_PAT) \
		$(DESTDIR)@LIBDIR@/$(OPAL_FILE).$(MAJOR_VERSION)
	ln -snf $(LIBNAME_PAT) \
		$(DESTDIR)@LIBDIR@/$(OPAL_FILE)
	ln -snf $(LIBNAME_PAT) \
		$(DESTDIR)@LIBDIR@/libopal.so
	( for fn in include/asn/*.h ; do \
		$(INSTALL) -m 644 $$fn $(DESTDIR)$(PREFIX)/include/opal/asn ; \
	done)
	( for fn in include/codec/*.h ; do \
		$(INSTALL) -m 644 $$fn $(DESTDIR)$(PREFIX)/include/opal/codec ; \
	done)
	( for fn in include/h323/*.h ; do \
		$(INSTALL) -m 644 $$fn $(DESTDIR)$(PREFIX)/include/opal/h323 ; \
	done)
	( for fn in include/iax2/*.h ; do \
		$(INSTALL) -m 644 $$fn $(DESTDIR)$(PREFIX)/include/opal/iax2 ; \
	done)
	( for fn in include/lids/*.h ; do \
		$(INSTALL) -m 644 $$fn $(DESTDIR)$(PREFIX)/include/opal/lids ; \
	done)
	( for fn in include/opal/*.h ; do \
		$(INSTALL) -m 644 $$fn $(DESTDIR)$(PREFIX)/include/opal/opal ; \
	done)
	( for fn in include/rtp/*.h ; do \
		$(INSTALL) -m 644 $$fn $(DESTDIR)$(PREFIX)/include/opal/rtp ; \
	done)
	( for fn in include/sip/*.h ; do \
		$(INSTALL) -m 644 $$fn $(DESTDIR)$(PREFIX)/include/opal/sip ; \
	done)
	( for fn in include/t120/*.h ; do \
		$(INSTALL) -m 644 $$fn $(DESTDIR)$(PREFIX)/include/opal/t120 ; \
	done)
	( for fn in include/t38/*.h ; do \
		$(INSTALL) -m 644 $$fn $(DESTDIR)$(PREFIX)/include/opal/t38 ; \
	done)
	$(INSTALL) -m 644 opal_inc.mak $(DESTDIR)$(PREFIX)/share/opal
	$(MAKE) -C plugins install

uninstall:
	rm -rf $(DESTDIR)$(PREFIX)/include/opal \
	       $(DESTDIR)$(PREFIX)/share/opal
	rm -f $(DESTDIR)@LIBDIR@/$(OPAL_FILE) \
	      $(DESTDIR)@LIBDIR@/libopal.so \
	      $(DESTDIR)@LIBDIR@/$(OPAL_FILE).$(MAJOR_VERSION).$(MINOR_VERSION) \
	      $(DESTDIR)@LIBDIR@/$(OPAL_FILE).$(MAJOR_VERSION) \
	      $(DESTDIR)@LIBDIR@/$(LIBNAME_PAT)
	$(MAKE) -C plugins uninstall

docs: FORCE
	doxygen opal_cfg.dxy

FORCE:
 

# End of file #################################################################
