AC_INIT(include/opal/manager.h)

AC_PROG_CXX

dnl ########################################################################
dnl set the OPAL directory to the current directory

OPALDIR=`pwd`
AC_SUBST(OPALDIR)

dnl ########################################################################
dnl set the PREFIX accordingly
if test "x$prefix" = "xNONE"; then
   INSTALLPREFIX="/usr/local"
else
   INSTALLPREFIX="${prefix}"
fi

AC_SUBST(INSTALLPREFIX)

dnl ########################################################################
dnl extract the OPAL version
MAJOR_VERSION=`cat ${OPALDIR}/version.h | grep MAJOR_VERSION | cut -f3 -d' '`
MINOR_VERSION=`cat ${OPALDIR}/version.h | grep MINOR_VERSION | cut -f3 -d' '`
BUILD_NUMBER=`cat ${OPALDIR}/version.h | grep BUILD_NUMBER | cut -f3 -d' '`
OPAL_VERSION="${MAJOR_VERSION}.${MINOR_VERSION}.${BUILD_NUMBER}"
AC_SUBST(OPAL_VERSION)

echo "OPAL version is ${OPAL_VERSION}"

dnl ########################################################################
dnl look for ptlib

PLATFORM_PTLIB="ptlib_${OSTYPE}_${MACHTYPE}_r"

CPPFLAGS_save="$CPPFLAGS"
CPPFLAGS="-I/usr/include/ptlib/unix/ -I/usr/include/ptclib/ -I/usr/local/include/ptlib/unix/ -I/usr/local/include/ptclib/ $CPPFLAGS"
AC_LANG([C++])
AC_CHECK_HEADERS(ptlib.h, HAS_PTLIB=1)
CPPFLAGS="$CPPFLAGS_save"

if test "${HAS_PTLIB:-unset}" != "unset" ; then
dnl  AC_CHECK_LIB(${PLATFORM_PTLIB}, ldap_open, HAS_PTLIB=1, HAS_PTLIB=)
  AC_PATH_PROG(PTLIB_CONFIG, ptlib-config)
else
  dnl find include files
  AC_CHECK_FILE(${PWLIBDIR}/include/ptlib, HAS_PTLIB=1)
  if test "${HAS_PTLIB:-unset}" != "unset" ; then
    AC_PATH_PROG(PTLIB_CONFIG, ptlib-config, , ${PWLIBDIR}/make/)
  else
    AC_CHECK_FILE(/usr/local/include/ptlib.h, HAS_PTLIB=1)
    if test "${HAS_PTLIB:-unset}" != "unset" ; then
      AC_PATH_PROG(PTLIB_CONFIG, ptlib-config, , /usr/local/bin)
    else
      AC_CHECK_FILE(${HOME}/pwlib/include/ptlib.h, HAS_PTLIB=1)
      if test "${HAS_PTLIB:-unset}" != "unset" ; then
        AC_CHECK_FILE(${HOME}/pwlib/make/ptlib-config, PTLIB_CONFIG=${HOME}/pwlib/make/ptlib-config)
        PWLIBDIR="${HOME}/pwlib"
      fi
    fi
  fi
fi

if test "${HAS_PTLIB:-unset}" = "unset" ; then
  echo "Cannot find ptlib - please install and try again"
  exit
fi

if test "${PTLIB_CONFIG:-unset}" = "unset" ; then
  echo "Cannot find ptlib-config - please install and try again"
  exit
fi

dnl ########################################################################
dnl get pwlib directory
if test "${PWLIBDIR:-unset}" = "unset" ; then
  PWLIBDIR=`ptlib-config --prefix`
fi
if test "x$PWLIBDIR" = "x/usr" -o "x$PWLIBDIR" = "x/usr/"; then
  PWLIBDIR="/usr/share/pwlib/"
fi
if test "xPWLIBDIR" = "x/usr/local" -o "x$PWLIBDIR" = "x/usr/"; then
  PWLIBDIR="/usr/local/share/pwlib/"
fi
echo "PWLib prefix set to.... $PWLIBDIR"
AC_SUBST(PWLIBDIR)


dnl ########################################################################
dnl Look for G.729 codec

dnl MSWIN_DISPLAY     vag729,Voice Age G.729A
dnl MSWIN_CHECK_FILE  vag729,va_g729a.h,VOICE_AGE_G729A=1
dnl MSWIN_DIR_SYMBOL  vag729,VOICE_AGE_DIR
dnl MSWIN_CHECK_DIR   vag729,..\va_g729\
dnl MSWIN_CHECK_DIR   vag729,..\external\va_g729
dnl MSWIN_CHECK_DIR   vag729,\va_g729
dnl MSWIN_CHECK_DIR   vag729,c:\va_g729


dnl ########################################################################
dnl Look for system libspeex

localspeex="xxx"
AC_ARG_ENABLE(localspeex,
       [  --enable-localspeex     use local version of Speex library rather than system version],
       localspeex=$enableval)

if test "${localspeex}" = "yes" ; then
  AC_MSG_NOTICE(Forcing use of local Speex sources)
elif test "${localspeex}" = "no" ; then
  AC_MSG_NOTICE(Forcing use of system Speex library)
  AC_DEFINE(OPAL_SYSTEM_SPEEX, 1)
  AC_SUBST(OPAL_SYSTEM_SPEEX, 1)
else
  AC_CHECK_LIB(speex, speex_encoder_destroy, SPEEX=1)
  if test "x$SPEEX" = "x"; then
    AC_MSG_NOTICE(Forcing use of local Speex library)
  else
    AC_MSG_CHECKING(system Speex version)
    cat > t.c <<C_FILE
    #include <speex.h>
    #include <speex_header.h>
    #include <stdio.h>
    int main(int argc,char *argv[])
    {
      SpeexHeader header;
      speex_init_header(&header, 1, 1, &speex_nb_mode);
      printf("%s\n", header.speex_version);
    }
C_FILE
    cc -o t t.c -lspeex > /dev/null 2>&1
    if test \! -x t ; then
      AC_MSG_RESULT(cannot determine - using library version)
    else
      SYSVER=`./t`
      rm -f t t.c
      AC_MSG_RESULT($SYSVER)
      AC_MSG_CHECKING(library Speex version)
      LIBVER=`grep "#define VERSION" ./src/codec/speex/libspeex/misc.h | sed -e 's/^.*[Ss][Pp][Ee][Ee][Xx]\-//' -e 's/\"//'`
      AC_MSG_RESULT($LIBVER)
      AC_MSG_CHECKING(Speex versions)
      cat > t.pl <<P_FILE
      [
      \$sysver = @ARGV[0];
      \$libver = @ARGV[1];
      @lib = split /\./, \$libver;
      while (@lib < 3) {
        @lib[0+@lib] = "0";
      }
      @sys = split /\./, \$sysver;
      while (@sys < 3) {
        @sys[0+@sys] = "0";
      }
      \$i = 0;
      while (\$i < 3) {
        print "comparing " . @sys[\$i] . " and " . @lib[\$i] . "\n";
        if (\@sys[\$i] < @lib[\$i]) {
          print "0";
          die;
        }
        \$i++;
      }
      print "1";
      ]
P_FILE
      SPEEX=`perl t.pl $SYSVER $LIBVER`
      rm t.pl
      if test "x$SPEEX" = "x" ; then
        AC_MSG_RESULT(library version is more recent)
      else
        AC_MSG_RESULT(system version is more recent)
        AC_DEFINE(OPAL_SYSTEM_SPEEX, 1)
        AC_SUBST(OPAL_SYSTEM_SPEEX, 1)
      fi
    fi
  fi
fi


dnl ########################################################################
dnl check if SIP and H.323 are enabled

dnl MSWIN_DISPLAY sip,SIP support
dnl MSWIN_DEFINE  sip,OPAL_SIP

sip=yes
AC_ARG_ENABLE(sip,
       [  --disable-sip           disable SIP protocol support],
       sip=$enableval)
AC_MSG_CHECKING(SIP protocol)
if test "$sip" = "yes" ; then
  AC_SUBST(OPAL_SIP, 1)
  AC_DEFINE(OPAL_SIP)
  AC_MSG_RESULT(enabled)
else
  AC_SUBST(OPAL_SIP, 0)
  AC_MSG_RESULT(disabled)
fi

dnl MSWIN_DISPLAY h323,H.323 support
dnl MSWIN_DEFINE  h323,OPAL_H323

h323=yes
AC_ARG_ENABLE(h323,
       [  --disable-h323          disable H.323 protocol support],
       h323=$enableval)
AC_MSG_CHECKING(H.323 protocol)
if test "$h323" = "yes" ; then
  AC_SUBST(OPAL_H323, 1)
  AC_DEFINE(OPAL_H323)
  AC_MSG_RESULT(enabled)
else
  AC_SUBST(OPAL_H323, 0)
  AC_MSG_RESULT(disabled)
fi
AC_SUBST(OPAL_H323, $OPAL_H323)


dnl ########################################################################
dnl output make directives

AC_SUBST(STDCCFLAGS)
AC_SUBST(LDFLAGS)
AC_SUBST(ENDLDLIBS)

dnl ########################################################################
dnl output header file

dnl AC_CONFIG_FILES(Makefile)
AC_CONFIG_FILES(opal_inc.mak)
AC_CONFIG_HEADERS(include/opal/buildopts.h)

AC_OUTPUT()
