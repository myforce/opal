/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#define SWIGCSHARP


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__)) 
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__)) 
# else
#   define SWIGUNUSED 
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif 
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED 
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif 
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif



#include <stdlib.h>
#include <string.h>
#include <stdio.h>


/* Support for throwing C# exceptions from C/C++. There are two types: 
 * Exceptions that take a message and ArgumentExceptions that take a message and a parameter name. */
typedef enum {
  SWIG_CSharpApplicationException,
  SWIG_CSharpArithmeticException,
  SWIG_CSharpDivideByZeroException,
  SWIG_CSharpIndexOutOfRangeException,
  SWIG_CSharpInvalidCastException,
  SWIG_CSharpInvalidOperationException,
  SWIG_CSharpIOException,
  SWIG_CSharpNullReferenceException,
  SWIG_CSharpOutOfMemoryException,
  SWIG_CSharpOverflowException,
  SWIG_CSharpSystemException
} SWIG_CSharpExceptionCodes;

typedef enum {
  SWIG_CSharpArgumentException,
  SWIG_CSharpArgumentNullException,
  SWIG_CSharpArgumentOutOfRangeException
} SWIG_CSharpExceptionArgumentCodes;

typedef void (SWIGSTDCALL* SWIG_CSharpExceptionCallback_t)(const char *);
typedef void (SWIGSTDCALL* SWIG_CSharpExceptionArgumentCallback_t)(const char *, const char *);

typedef struct {
  SWIG_CSharpExceptionCodes code;
  SWIG_CSharpExceptionCallback_t callback;
} SWIG_CSharpException_t;

typedef struct {
  SWIG_CSharpExceptionArgumentCodes code;
  SWIG_CSharpExceptionArgumentCallback_t callback;
} SWIG_CSharpExceptionArgument_t;

static SWIG_CSharpException_t SWIG_csharp_exceptions[] = {
  { SWIG_CSharpApplicationException, NULL },
  { SWIG_CSharpArithmeticException, NULL },
  { SWIG_CSharpDivideByZeroException, NULL },
  { SWIG_CSharpIndexOutOfRangeException, NULL },
  { SWIG_CSharpInvalidCastException, NULL },
  { SWIG_CSharpInvalidOperationException, NULL },
  { SWIG_CSharpIOException, NULL },
  { SWIG_CSharpNullReferenceException, NULL },
  { SWIG_CSharpOutOfMemoryException, NULL },
  { SWIG_CSharpOverflowException, NULL },
  { SWIG_CSharpSystemException, NULL }
};

static SWIG_CSharpExceptionArgument_t SWIG_csharp_exceptions_argument[] = {
  { SWIG_CSharpArgumentException, NULL },
  { SWIG_CSharpArgumentNullException, NULL },
  { SWIG_CSharpArgumentOutOfRangeException, NULL }
};

static void SWIGUNUSED SWIG_CSharpSetPendingException(SWIG_CSharpExceptionCodes code, const char *msg) {
  SWIG_CSharpExceptionCallback_t callback = SWIG_csharp_exceptions[SWIG_CSharpApplicationException].callback;
  if ((size_t)code < sizeof(SWIG_csharp_exceptions)/sizeof(SWIG_CSharpException_t)) {
    callback = SWIG_csharp_exceptions[code].callback;
  }
  callback(msg);
}

static void SWIGUNUSED SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpExceptionArgumentCodes code, const char *msg, const char *param_name) {
  SWIG_CSharpExceptionArgumentCallback_t callback = SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentException].callback;
  if ((size_t)code < sizeof(SWIG_csharp_exceptions_argument)/sizeof(SWIG_CSharpExceptionArgument_t)) {
    callback = SWIG_csharp_exceptions_argument[code].callback;
  }
  callback(msg, param_name);
}


#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterExceptionCallbacks_OPAL(
                                                SWIG_CSharpExceptionCallback_t applicationCallback,
                                                SWIG_CSharpExceptionCallback_t arithmeticCallback,
                                                SWIG_CSharpExceptionCallback_t divideByZeroCallback, 
                                                SWIG_CSharpExceptionCallback_t indexOutOfRangeCallback, 
                                                SWIG_CSharpExceptionCallback_t invalidCastCallback,
                                                SWIG_CSharpExceptionCallback_t invalidOperationCallback,
                                                SWIG_CSharpExceptionCallback_t ioCallback,
                                                SWIG_CSharpExceptionCallback_t nullReferenceCallback,
                                                SWIG_CSharpExceptionCallback_t outOfMemoryCallback, 
                                                SWIG_CSharpExceptionCallback_t overflowCallback, 
                                                SWIG_CSharpExceptionCallback_t systemCallback) {
  SWIG_csharp_exceptions[SWIG_CSharpApplicationException].callback = applicationCallback;
  SWIG_csharp_exceptions[SWIG_CSharpArithmeticException].callback = arithmeticCallback;
  SWIG_csharp_exceptions[SWIG_CSharpDivideByZeroException].callback = divideByZeroCallback;
  SWIG_csharp_exceptions[SWIG_CSharpIndexOutOfRangeException].callback = indexOutOfRangeCallback;
  SWIG_csharp_exceptions[SWIG_CSharpInvalidCastException].callback = invalidCastCallback;
  SWIG_csharp_exceptions[SWIG_CSharpInvalidOperationException].callback = invalidOperationCallback;
  SWIG_csharp_exceptions[SWIG_CSharpIOException].callback = ioCallback;
  SWIG_csharp_exceptions[SWIG_CSharpNullReferenceException].callback = nullReferenceCallback;
  SWIG_csharp_exceptions[SWIG_CSharpOutOfMemoryException].callback = outOfMemoryCallback;
  SWIG_csharp_exceptions[SWIG_CSharpOverflowException].callback = overflowCallback;
  SWIG_csharp_exceptions[SWIG_CSharpSystemException].callback = systemCallback;
}

#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterExceptionArgumentCallbacks_OPAL(
                                                SWIG_CSharpExceptionArgumentCallback_t argumentCallback,
                                                SWIG_CSharpExceptionArgumentCallback_t argumentNullCallback,
                                                SWIG_CSharpExceptionArgumentCallback_t argumentOutOfRangeCallback) {
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentException].callback = argumentCallback;
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentNullException].callback = argumentNullCallback;
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentOutOfRangeException].callback = argumentOutOfRangeCallback;
}


/* Callback for returning strings to C# without leaking memory */
typedef char * (SWIGSTDCALL* SWIG_CSharpStringHelperCallback)(const char *);
static SWIG_CSharpStringHelperCallback SWIG_csharp_string_callback = NULL;


#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterStringCallback_OPAL(SWIG_CSharpStringHelperCallback callback) {
  SWIG_csharp_string_callback = callback;
}


/* Contract support */

#define SWIG_contract_assert(nullreturn, expr, msg) if (!(expr)) {SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, msg, ""); return nullreturn; } else


    /* Includes the header in the wrapper code */
    #include "opal.h"
    int opal_csharp_swig_wrapper_link;
  

#ifdef __cplusplus
extern "C" {
#endif

SWIGEXPORT int SWIGSTDCALL CSharp_OPAL_C_API_VERSION_get() {
  int jresult ;
  int result;
  
  result = (int)(30);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalInitialise(void * jarg1, char * jarg2) {
  void * jresult ;
  unsigned int *arg1 = (unsigned int *) 0 ;
  char *arg2 = (char *) 0 ;
  OpalHandle result;
  
  arg1 = (unsigned int *)jarg1; 
  arg2 = (char *)jarg2; 
  result = (OpalHandle)OpalInitialise(arg1,(char const *)arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OPAL_INITIALISE_FUNCTION_get() {
  char * jresult ;
  char *result = 0 ;
  
  result = (char *)("OpalInitialise");
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalShutDown(void * jarg1) {
  OpalHandle arg1 = (OpalHandle) 0 ;
  
  arg1 = (OpalHandle)jarg1; 
  OpalShutDown(arg1);
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OPAL_SHUTDOWN_FUNCTION_get() {
  char * jresult ;
  char *result = 0 ;
  
  result = (char *)("OpalShutDown");
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalGetMessage(void * jarg1, unsigned int jarg2) {
  void * jresult ;
  OpalHandle arg1 = (OpalHandle) 0 ;
  unsigned int arg2 ;
  OpalMessage *result = 0 ;
  
  arg1 = (OpalHandle)jarg1; 
  arg2 = (unsigned int)jarg2; 
  result = (OpalMessage *)OpalGetMessage(arg1,arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OPAL_GET_MESSAGE_FUNCTION_get() {
  char * jresult ;
  char *result = 0 ;
  
  result = (char *)("OpalGetMessage");
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalSendMessage(void * jarg1, void * jarg2) {
  void * jresult ;
  OpalHandle arg1 = (OpalHandle) 0 ;
  OpalMessage *arg2 = (OpalMessage *) 0 ;
  OpalMessage *result = 0 ;
  
  arg1 = (OpalHandle)jarg1; 
  arg2 = (OpalMessage *)jarg2; 
  result = (OpalMessage *)OpalSendMessage(arg1,(OpalMessage const *)arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OPAL_SEND_MESSAGE_FUNCTION_get() {
  char * jresult ;
  char *result = 0 ;
  
  result = (char *)("OpalSendMessage");
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalFreeMessage(void * jarg1) {
  OpalMessage *arg1 = (OpalMessage *) 0 ;
  
  arg1 = (OpalMessage *)jarg1; 
  OpalFreeMessage(arg1);
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OPAL_FREE_MESSAGE_FUNCTION_get() {
  char * jresult ;
  char *result = 0 ;
  
  result = (char *)("OpalFreeMessage");
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OPAL_PREFIX_H323_get() {
  char * jresult ;
  char *result = 0 ;
  
  result = (char *)("h323");
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OPAL_PREFIX_SIP_get() {
  char * jresult ;
  char *result = 0 ;
  
  result = (char *)("sip");
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OPAL_PREFIX_IAX2_get() {
  char * jresult ;
  char *result = 0 ;
  
  result = (char *)("iax2");
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OPAL_PREFIX_PCSS_get() {
  char * jresult ;
  char *result = 0 ;
  
  result = (char *)("pc");
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OPAL_PREFIX_LOCAL_get() {
  char * jresult ;
  char *result = 0 ;
  
  result = (char *)("local");
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OPAL_PREFIX_POTS_get() {
  char * jresult ;
  char *result = 0 ;
  
  result = (char *)("pots");
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OPAL_PREFIX_PSTN_get() {
  char * jresult ;
  char *result = 0 ;
  
  result = (char *)("pstn");
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OPAL_PREFIX_CAPI_get() {
  char * jresult ;
  char *result = 0 ;
  
  result = (char *)("isdn");
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OPAL_PREFIX_FAX_get() {
  char * jresult ;
  char *result = 0 ;
  
  result = (char *)("fax");
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OPAL_PREFIX_T38_get() {
  char * jresult ;
  char *result = 0 ;
  
  result = (char *)("t38");
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OPAL_PREFIX_IVR_get() {
  char * jresult ;
  char *result = 0 ;
  
  result = (char *)("ivr");
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OPAL_PREFIX_MIXER_get() {
  char * jresult ;
  char *result = 0 ;
  
  result = (char *)("mcu");
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OPAL_PREFIX_IM_get() {
  char * jresult ;
  char *result = 0 ;
  
  result = (char *)("im");
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OPAL_PREFIX_GST_get() {
  char * jresult ;
  char *result = 0 ;
  
  result = (char *)("gst");
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OPAL_PREFIX_SKINNY_get() {
  char * jresult ;
  char *result = 0 ;
  
  result = (char *)("sccp");
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OPAL_PREFIX_ALL_get() {
  char * jresult ;
  char *result = 0 ;
  
  result = (char *)("sip h323 iax2 pc local pots pstn fax t38 ivr mcu im");
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamGeneral_audioRecordDevice_set(void * jarg1, char * jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_audioRecordDevice = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_audioRecordDevice, (const char *)arg2);
    } else {
      arg1->m_audioRecordDevice = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalParamGeneral_audioRecordDevice_get(void * jarg1) {
  char * jresult ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  result = (char *) ((arg1)->m_audioRecordDevice);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamGeneral_audioPlayerDevice_set(void * jarg1, char * jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_audioPlayerDevice = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_audioPlayerDevice, (const char *)arg2);
    } else {
      arg1->m_audioPlayerDevice = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalParamGeneral_audioPlayerDevice_get(void * jarg1) {
  char * jresult ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  result = (char *) ((arg1)->m_audioPlayerDevice);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamGeneral_videoInputDevice_set(void * jarg1, char * jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_videoInputDevice = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_videoInputDevice, (const char *)arg2);
    } else {
      arg1->m_videoInputDevice = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalParamGeneral_videoInputDevice_get(void * jarg1) {
  char * jresult ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  result = (char *) ((arg1)->m_videoInputDevice);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamGeneral_videoOutputDevice_set(void * jarg1, char * jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_videoOutputDevice = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_videoOutputDevice, (const char *)arg2);
    } else {
      arg1->m_videoOutputDevice = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalParamGeneral_videoOutputDevice_get(void * jarg1) {
  char * jresult ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  result = (char *) ((arg1)->m_videoOutputDevice);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamGeneral_videoPreviewDevice_set(void * jarg1, char * jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_videoPreviewDevice = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_videoPreviewDevice, (const char *)arg2);
    } else {
      arg1->m_videoPreviewDevice = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalParamGeneral_videoPreviewDevice_get(void * jarg1) {
  char * jresult ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  result = (char *) ((arg1)->m_videoPreviewDevice);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamGeneral_mediaOrder_set(void * jarg1, char * jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_mediaOrder = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_mediaOrder, (const char *)arg2);
    } else {
      arg1->m_mediaOrder = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalParamGeneral_mediaOrder_get(void * jarg1) {
  char * jresult ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  result = (char *) ((arg1)->m_mediaOrder);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamGeneral_mediaMask_set(void * jarg1, char * jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_mediaMask = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_mediaMask, (const char *)arg2);
    } else {
      arg1->m_mediaMask = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalParamGeneral_mediaMask_get(void * jarg1) {
  char * jresult ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  result = (char *) ((arg1)->m_mediaMask);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamGeneral_autoRxMedia_set(void * jarg1, char * jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_autoRxMedia = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_autoRxMedia, (const char *)arg2);
    } else {
      arg1->m_autoRxMedia = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalParamGeneral_autoRxMedia_get(void * jarg1) {
  char * jresult ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  result = (char *) ((arg1)->m_autoRxMedia);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamGeneral_autoTxMedia_set(void * jarg1, char * jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_autoTxMedia = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_autoTxMedia, (const char *)arg2);
    } else {
      arg1->m_autoTxMedia = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalParamGeneral_autoTxMedia_get(void * jarg1) {
  char * jresult ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  result = (char *) ((arg1)->m_autoTxMedia);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamGeneral_natMethod_set(void * jarg1, char * jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_natMethod = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_natMethod, (const char *)arg2);
    } else {
      arg1->m_natMethod = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalParamGeneral_natMethod_get(void * jarg1) {
  char * jresult ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  result = (char *) ((arg1)->m_natMethod);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamGeneral_natServer_set(void * jarg1, char * jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_natServer = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_natServer, (const char *)arg2);
    } else {
      arg1->m_natServer = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalParamGeneral_natServer_get(void * jarg1) {
  char * jresult ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  result = (char *) ((arg1)->m_natServer);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamGeneral_tcpPortBase_set(void * jarg1, unsigned int jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int arg2 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_tcpPortBase = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_OpalParamGeneral_tcpPortBase_get(void * jarg1) {
  unsigned int jresult ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int result;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  result = (unsigned int) ((arg1)->m_tcpPortBase);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamGeneral_tcpPortMax_set(void * jarg1, unsigned int jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int arg2 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_tcpPortMax = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_OpalParamGeneral_tcpPortMax_get(void * jarg1) {
  unsigned int jresult ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int result;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  result = (unsigned int) ((arg1)->m_tcpPortMax);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamGeneral_udpPortBase_set(void * jarg1, unsigned int jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int arg2 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_udpPortBase = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_OpalParamGeneral_udpPortBase_get(void * jarg1) {
  unsigned int jresult ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int result;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  result = (unsigned int) ((arg1)->m_udpPortBase);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamGeneral_udpPortMax_set(void * jarg1, unsigned int jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int arg2 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_udpPortMax = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_OpalParamGeneral_udpPortMax_get(void * jarg1) {
  unsigned int jresult ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int result;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  result = (unsigned int) ((arg1)->m_udpPortMax);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamGeneral_rtpPortBase_set(void * jarg1, unsigned int jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int arg2 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_rtpPortBase = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_OpalParamGeneral_rtpPortBase_get(void * jarg1) {
  unsigned int jresult ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int result;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  result = (unsigned int) ((arg1)->m_rtpPortBase);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamGeneral_rtpPortMax_set(void * jarg1, unsigned int jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int arg2 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_rtpPortMax = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_OpalParamGeneral_rtpPortMax_get(void * jarg1) {
  unsigned int jresult ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int result;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  result = (unsigned int) ((arg1)->m_rtpPortMax);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamGeneral_rtpTypeOfService_set(void * jarg1, unsigned int jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int arg2 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_rtpTypeOfService = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_OpalParamGeneral_rtpTypeOfService_get(void * jarg1) {
  unsigned int jresult ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int result;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  result = (unsigned int) ((arg1)->m_rtpTypeOfService);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamGeneral_rtpMaxPayloadSize_set(void * jarg1, unsigned int jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int arg2 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_rtpMaxPayloadSize = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_OpalParamGeneral_rtpMaxPayloadSize_get(void * jarg1) {
  unsigned int jresult ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int result;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  result = (unsigned int) ((arg1)->m_rtpMaxPayloadSize);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamGeneral_minAudioJitter_set(void * jarg1, unsigned int jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int arg2 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_minAudioJitter = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_OpalParamGeneral_minAudioJitter_get(void * jarg1) {
  unsigned int jresult ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int result;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  result = (unsigned int) ((arg1)->m_minAudioJitter);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamGeneral_maxAudioJitter_set(void * jarg1, unsigned int jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int arg2 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_maxAudioJitter = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_OpalParamGeneral_maxAudioJitter_get(void * jarg1) {
  unsigned int jresult ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int result;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  result = (unsigned int) ((arg1)->m_maxAudioJitter);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamGeneral_silenceDetectMode_set(void * jarg1, int jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  OpalSilenceDetectMode arg2 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  arg2 = (OpalSilenceDetectMode)jarg2; 
  if (arg1) (arg1)->m_silenceDetectMode = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_OpalParamGeneral_silenceDetectMode_get(void * jarg1) {
  int jresult ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  OpalSilenceDetectMode result;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  result = (OpalSilenceDetectMode) ((arg1)->m_silenceDetectMode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamGeneral_silenceThreshold_set(void * jarg1, unsigned int jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int arg2 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_silenceThreshold = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_OpalParamGeneral_silenceThreshold_get(void * jarg1) {
  unsigned int jresult ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int result;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  result = (unsigned int) ((arg1)->m_silenceThreshold);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamGeneral_signalDeadband_set(void * jarg1, unsigned int jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int arg2 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_signalDeadband = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_OpalParamGeneral_signalDeadband_get(void * jarg1) {
  unsigned int jresult ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int result;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  result = (unsigned int) ((arg1)->m_signalDeadband);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamGeneral_silenceDeadband_set(void * jarg1, unsigned int jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int arg2 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_silenceDeadband = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_OpalParamGeneral_silenceDeadband_get(void * jarg1) {
  unsigned int jresult ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int result;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  result = (unsigned int) ((arg1)->m_silenceDeadband);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamGeneral_silenceAdaptPeriod_set(void * jarg1, unsigned int jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int arg2 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_silenceAdaptPeriod = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_OpalParamGeneral_silenceAdaptPeriod_get(void * jarg1) {
  unsigned int jresult ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int result;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  result = (unsigned int) ((arg1)->m_silenceAdaptPeriod);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamGeneral_echoCancellation_set(void * jarg1, int jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  OpalEchoCancelMode arg2 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  arg2 = (OpalEchoCancelMode)jarg2; 
  if (arg1) (arg1)->m_echoCancellation = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_OpalParamGeneral_echoCancellation_get(void * jarg1) {
  int jresult ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  OpalEchoCancelMode result;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  result = (OpalEchoCancelMode) ((arg1)->m_echoCancellation);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamGeneral_audioBuffers_set(void * jarg1, unsigned int jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int arg2 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_audioBuffers = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_OpalParamGeneral_audioBuffers_get(void * jarg1) {
  unsigned int jresult ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int result;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  result = (unsigned int) ((arg1)->m_audioBuffers);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamGeneral_mediaReadData_set(void * jarg1, void * jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  OpalMediaDataFunction arg2 = (OpalMediaDataFunction) 0 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  arg2 = (OpalMediaDataFunction)jarg2; 
  if (arg1) (arg1)->m_mediaReadData = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalParamGeneral_mediaReadData_get(void * jarg1) {
  void * jresult ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  OpalMediaDataFunction result;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  result = (OpalMediaDataFunction) ((arg1)->m_mediaReadData);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamGeneral_mediaWriteData_set(void * jarg1, void * jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  OpalMediaDataFunction arg2 = (OpalMediaDataFunction) 0 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  arg2 = (OpalMediaDataFunction)jarg2; 
  if (arg1) (arg1)->m_mediaWriteData = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalParamGeneral_mediaWriteData_get(void * jarg1) {
  void * jresult ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  OpalMediaDataFunction result;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  result = (OpalMediaDataFunction) ((arg1)->m_mediaWriteData);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamGeneral_mediaDataHeader_set(void * jarg1, int jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  OpalMediaDataType arg2 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  arg2 = (OpalMediaDataType)jarg2; 
  if (arg1) (arg1)->m_mediaDataHeader = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_OpalParamGeneral_mediaDataHeader_get(void * jarg1) {
  int jresult ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  OpalMediaDataType result;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  result = (OpalMediaDataType) ((arg1)->m_mediaDataHeader);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamGeneral_messageAvailable_set(void * jarg1, void * jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  OpalMessageAvailableFunction arg2 = (OpalMessageAvailableFunction) 0 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  arg2 = (OpalMessageAvailableFunction)jarg2; 
  if (arg1) (arg1)->m_messageAvailable = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalParamGeneral_messageAvailable_get(void * jarg1) {
  void * jresult ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  OpalMessageAvailableFunction result;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  result = (OpalMessageAvailableFunction) ((arg1)->m_messageAvailable);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamGeneral_mediaOptions_set(void * jarg1, char * jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_mediaOptions = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_mediaOptions, (const char *)arg2);
    } else {
      arg1->m_mediaOptions = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalParamGeneral_mediaOptions_get(void * jarg1) {
  char * jresult ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  result = (char *) ((arg1)->m_mediaOptions);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamGeneral_audioBufferTime_set(void * jarg1, unsigned int jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int arg2 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_audioBufferTime = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_OpalParamGeneral_audioBufferTime_get(void * jarg1) {
  unsigned int jresult ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int result;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  result = (unsigned int) ((arg1)->m_audioBufferTime);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamGeneral_manualAlerting_set(void * jarg1, unsigned int jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int arg2 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_manualAlerting = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_OpalParamGeneral_manualAlerting_get(void * jarg1) {
  unsigned int jresult ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  unsigned int result;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  result = (unsigned int) ((arg1)->m_manualAlerting);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamGeneral_mediaTiming_set(void * jarg1, int jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  OpalMediaTiming arg2 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  arg2 = (OpalMediaTiming)jarg2; 
  if (arg1) (arg1)->m_mediaTiming = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_OpalParamGeneral_mediaTiming_get(void * jarg1) {
  int jresult ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  OpalMediaTiming result;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  result = (OpalMediaTiming) ((arg1)->m_mediaTiming);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamGeneral_videoSourceTiming_set(void * jarg1, int jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  OpalMediaTiming arg2 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  arg2 = (OpalMediaTiming)jarg2; 
  if (arg1) (arg1)->m_videoSourceTiming = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_OpalParamGeneral_videoSourceTiming_get(void * jarg1) {
  int jresult ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  OpalMediaTiming result;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  result = (OpalMediaTiming) ((arg1)->m_videoSourceTiming);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamGeneral_pcssMediaOverride_set(void * jarg1, char * jarg2) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_pcssMediaOverride = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_pcssMediaOverride, (const char *)arg2);
    } else {
      arg1->m_pcssMediaOverride = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalParamGeneral_pcssMediaOverride_get(void * jarg1) {
  char * jresult ;
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  result = (char *) ((arg1)->m_pcssMediaOverride);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_OpalParamGeneral() {
  void * jresult ;
  OpalParamGeneral *result = 0 ;
  
  result = (OpalParamGeneral *)new OpalParamGeneral();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_OpalParamGeneral(void * jarg1) {
  OpalParamGeneral *arg1 = (OpalParamGeneral *) 0 ;
  
  arg1 = (OpalParamGeneral *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalProductDescription_vendor_set(void * jarg1, char * jarg2) {
  OpalProductDescription *arg1 = (OpalProductDescription *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalProductDescription *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_vendor = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_vendor, (const char *)arg2);
    } else {
      arg1->m_vendor = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalProductDescription_vendor_get(void * jarg1) {
  char * jresult ;
  OpalProductDescription *arg1 = (OpalProductDescription *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalProductDescription *)jarg1; 
  result = (char *) ((arg1)->m_vendor);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalProductDescription_name_set(void * jarg1, char * jarg2) {
  OpalProductDescription *arg1 = (OpalProductDescription *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalProductDescription *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_name = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_name, (const char *)arg2);
    } else {
      arg1->m_name = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalProductDescription_name_get(void * jarg1) {
  char * jresult ;
  OpalProductDescription *arg1 = (OpalProductDescription *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalProductDescription *)jarg1; 
  result = (char *) ((arg1)->m_name);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalProductDescription_version_set(void * jarg1, char * jarg2) {
  OpalProductDescription *arg1 = (OpalProductDescription *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalProductDescription *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_version = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_version, (const char *)arg2);
    } else {
      arg1->m_version = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalProductDescription_version_get(void * jarg1) {
  char * jresult ;
  OpalProductDescription *arg1 = (OpalProductDescription *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalProductDescription *)jarg1; 
  result = (char *) ((arg1)->m_version);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalProductDescription_t35CountryCode_set(void * jarg1, unsigned int jarg2) {
  OpalProductDescription *arg1 = (OpalProductDescription *) 0 ;
  unsigned int arg2 ;
  
  arg1 = (OpalProductDescription *)jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_t35CountryCode = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_OpalProductDescription_t35CountryCode_get(void * jarg1) {
  unsigned int jresult ;
  OpalProductDescription *arg1 = (OpalProductDescription *) 0 ;
  unsigned int result;
  
  arg1 = (OpalProductDescription *)jarg1; 
  result = (unsigned int) ((arg1)->m_t35CountryCode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalProductDescription_t35Extension_set(void * jarg1, unsigned int jarg2) {
  OpalProductDescription *arg1 = (OpalProductDescription *) 0 ;
  unsigned int arg2 ;
  
  arg1 = (OpalProductDescription *)jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_t35Extension = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_OpalProductDescription_t35Extension_get(void * jarg1) {
  unsigned int jresult ;
  OpalProductDescription *arg1 = (OpalProductDescription *) 0 ;
  unsigned int result;
  
  arg1 = (OpalProductDescription *)jarg1; 
  result = (unsigned int) ((arg1)->m_t35Extension);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalProductDescription_manufacturerCode_set(void * jarg1, unsigned int jarg2) {
  OpalProductDescription *arg1 = (OpalProductDescription *) 0 ;
  unsigned int arg2 ;
  
  arg1 = (OpalProductDescription *)jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_manufacturerCode = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_OpalProductDescription_manufacturerCode_get(void * jarg1) {
  unsigned int jresult ;
  OpalProductDescription *arg1 = (OpalProductDescription *) 0 ;
  unsigned int result;
  
  arg1 = (OpalProductDescription *)jarg1; 
  result = (unsigned int) ((arg1)->m_manufacturerCode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_OpalProductDescription() {
  void * jresult ;
  OpalProductDescription *result = 0 ;
  
  result = (OpalProductDescription *)new OpalProductDescription();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_OpalProductDescription(void * jarg1) {
  OpalProductDescription *arg1 = (OpalProductDescription *) 0 ;
  
  arg1 = (OpalProductDescription *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamProtocol_prefix_set(void * jarg1, char * jarg2) {
  OpalParamProtocol *arg1 = (OpalParamProtocol *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalParamProtocol *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_prefix = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_prefix, (const char *)arg2);
    } else {
      arg1->m_prefix = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalParamProtocol_prefix_get(void * jarg1) {
  char * jresult ;
  OpalParamProtocol *arg1 = (OpalParamProtocol *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalParamProtocol *)jarg1; 
  result = (char *) ((arg1)->m_prefix);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamProtocol_userName_set(void * jarg1, char * jarg2) {
  OpalParamProtocol *arg1 = (OpalParamProtocol *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalParamProtocol *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_userName = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_userName, (const char *)arg2);
    } else {
      arg1->m_userName = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalParamProtocol_userName_get(void * jarg1) {
  char * jresult ;
  OpalParamProtocol *arg1 = (OpalParamProtocol *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalParamProtocol *)jarg1; 
  result = (char *) ((arg1)->m_userName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamProtocol_displayName_set(void * jarg1, char * jarg2) {
  OpalParamProtocol *arg1 = (OpalParamProtocol *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalParamProtocol *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_displayName = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_displayName, (const char *)arg2);
    } else {
      arg1->m_displayName = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalParamProtocol_displayName_get(void * jarg1) {
  char * jresult ;
  OpalParamProtocol *arg1 = (OpalParamProtocol *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalParamProtocol *)jarg1; 
  result = (char *) ((arg1)->m_displayName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamProtocol_product_set(void * jarg1, void * jarg2) {
  OpalParamProtocol *arg1 = (OpalParamProtocol *) 0 ;
  OpalProductDescription *arg2 = (OpalProductDescription *) 0 ;
  
  arg1 = (OpalParamProtocol *)jarg1; 
  arg2 = (OpalProductDescription *)jarg2; 
  if (arg1) (arg1)->m_product = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalParamProtocol_product_get(void * jarg1) {
  void * jresult ;
  OpalParamProtocol *arg1 = (OpalParamProtocol *) 0 ;
  OpalProductDescription *result = 0 ;
  
  arg1 = (OpalParamProtocol *)jarg1; 
  result = (OpalProductDescription *)& ((arg1)->m_product);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamProtocol_interfaceAddresses_set(void * jarg1, char * jarg2) {
  OpalParamProtocol *arg1 = (OpalParamProtocol *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalParamProtocol *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_interfaceAddresses = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_interfaceAddresses, (const char *)arg2);
    } else {
      arg1->m_interfaceAddresses = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalParamProtocol_interfaceAddresses_get(void * jarg1) {
  char * jresult ;
  OpalParamProtocol *arg1 = (OpalParamProtocol *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalParamProtocol *)jarg1; 
  result = (char *) ((arg1)->m_interfaceAddresses);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamProtocol_userInputMode_set(void * jarg1, int jarg2) {
  OpalParamProtocol *arg1 = (OpalParamProtocol *) 0 ;
  OpalUserInputModes arg2 ;
  
  arg1 = (OpalParamProtocol *)jarg1; 
  arg2 = (OpalUserInputModes)jarg2; 
  if (arg1) (arg1)->m_userInputMode = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_OpalParamProtocol_userInputMode_get(void * jarg1) {
  int jresult ;
  OpalParamProtocol *arg1 = (OpalParamProtocol *) 0 ;
  OpalUserInputModes result;
  
  arg1 = (OpalParamProtocol *)jarg1; 
  result = (OpalUserInputModes) ((arg1)->m_userInputMode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamProtocol_defaultOptions_set(void * jarg1, char * jarg2) {
  OpalParamProtocol *arg1 = (OpalParamProtocol *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalParamProtocol *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_defaultOptions = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_defaultOptions, (const char *)arg2);
    } else {
      arg1->m_defaultOptions = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalParamProtocol_defaultOptions_get(void * jarg1) {
  char * jresult ;
  OpalParamProtocol *arg1 = (OpalParamProtocol *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalParamProtocol *)jarg1; 
  result = (char *) ((arg1)->m_defaultOptions);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_OpalParamProtocol() {
  void * jresult ;
  OpalParamProtocol *result = 0 ;
  
  result = (OpalParamProtocol *)new OpalParamProtocol();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_OpalParamProtocol(void * jarg1) {
  OpalParamProtocol *arg1 = (OpalParamProtocol *) 0 ;
  
  arg1 = (OpalParamProtocol *)jarg1; 
  delete arg1;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OPAL_MWI_EVENT_PACKAGE_get() {
  char * jresult ;
  char *result = 0 ;
  
  result = (char *)("message-summary");
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OPAL_LINE_APPEARANCE_EVENT_PACKAGE_get() {
  char * jresult ;
  char *result = 0 ;
  
  result = (char *)("dialog;sla;ma");
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamRegistration_protocol_set(void * jarg1, char * jarg2) {
  OpalParamRegistration *arg1 = (OpalParamRegistration *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalParamRegistration *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_protocol = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_protocol, (const char *)arg2);
    } else {
      arg1->m_protocol = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalParamRegistration_protocol_get(void * jarg1) {
  char * jresult ;
  OpalParamRegistration *arg1 = (OpalParamRegistration *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalParamRegistration *)jarg1; 
  result = (char *) ((arg1)->m_protocol);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamRegistration_identifier_set(void * jarg1, char * jarg2) {
  OpalParamRegistration *arg1 = (OpalParamRegistration *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalParamRegistration *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_identifier = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_identifier, (const char *)arg2);
    } else {
      arg1->m_identifier = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalParamRegistration_identifier_get(void * jarg1) {
  char * jresult ;
  OpalParamRegistration *arg1 = (OpalParamRegistration *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalParamRegistration *)jarg1; 
  result = (char *) ((arg1)->m_identifier);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamRegistration_hostName_set(void * jarg1, char * jarg2) {
  OpalParamRegistration *arg1 = (OpalParamRegistration *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalParamRegistration *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_hostName = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_hostName, (const char *)arg2);
    } else {
      arg1->m_hostName = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalParamRegistration_hostName_get(void * jarg1) {
  char * jresult ;
  OpalParamRegistration *arg1 = (OpalParamRegistration *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalParamRegistration *)jarg1; 
  result = (char *) ((arg1)->m_hostName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamRegistration_authUserName_set(void * jarg1, char * jarg2) {
  OpalParamRegistration *arg1 = (OpalParamRegistration *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalParamRegistration *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_authUserName = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_authUserName, (const char *)arg2);
    } else {
      arg1->m_authUserName = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalParamRegistration_authUserName_get(void * jarg1) {
  char * jresult ;
  OpalParamRegistration *arg1 = (OpalParamRegistration *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalParamRegistration *)jarg1; 
  result = (char *) ((arg1)->m_authUserName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamRegistration_password_set(void * jarg1, char * jarg2) {
  OpalParamRegistration *arg1 = (OpalParamRegistration *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalParamRegistration *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_password = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_password, (const char *)arg2);
    } else {
      arg1->m_password = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalParamRegistration_password_get(void * jarg1) {
  char * jresult ;
  OpalParamRegistration *arg1 = (OpalParamRegistration *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalParamRegistration *)jarg1; 
  result = (char *) ((arg1)->m_password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamRegistration_adminEntity_set(void * jarg1, char * jarg2) {
  OpalParamRegistration *arg1 = (OpalParamRegistration *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalParamRegistration *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_adminEntity = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_adminEntity, (const char *)arg2);
    } else {
      arg1->m_adminEntity = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalParamRegistration_adminEntity_get(void * jarg1) {
  char * jresult ;
  OpalParamRegistration *arg1 = (OpalParamRegistration *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalParamRegistration *)jarg1; 
  result = (char *) ((arg1)->m_adminEntity);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamRegistration_timeToLive_set(void * jarg1, unsigned int jarg2) {
  OpalParamRegistration *arg1 = (OpalParamRegistration *) 0 ;
  unsigned int arg2 ;
  
  arg1 = (OpalParamRegistration *)jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_timeToLive = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_OpalParamRegistration_timeToLive_get(void * jarg1) {
  unsigned int jresult ;
  OpalParamRegistration *arg1 = (OpalParamRegistration *) 0 ;
  unsigned int result;
  
  arg1 = (OpalParamRegistration *)jarg1; 
  result = (unsigned int) ((arg1)->m_timeToLive);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamRegistration_restoreTime_set(void * jarg1, unsigned int jarg2) {
  OpalParamRegistration *arg1 = (OpalParamRegistration *) 0 ;
  unsigned int arg2 ;
  
  arg1 = (OpalParamRegistration *)jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_restoreTime = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_OpalParamRegistration_restoreTime_get(void * jarg1) {
  unsigned int jresult ;
  OpalParamRegistration *arg1 = (OpalParamRegistration *) 0 ;
  unsigned int result;
  
  arg1 = (OpalParamRegistration *)jarg1; 
  result = (unsigned int) ((arg1)->m_restoreTime);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamRegistration_eventPackage_set(void * jarg1, char * jarg2) {
  OpalParamRegistration *arg1 = (OpalParamRegistration *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalParamRegistration *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_eventPackage = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_eventPackage, (const char *)arg2);
    } else {
      arg1->m_eventPackage = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalParamRegistration_eventPackage_get(void * jarg1) {
  char * jresult ;
  OpalParamRegistration *arg1 = (OpalParamRegistration *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalParamRegistration *)jarg1; 
  result = (char *) ((arg1)->m_eventPackage);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamRegistration_attributes_set(void * jarg1, char * jarg2) {
  OpalParamRegistration *arg1 = (OpalParamRegistration *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalParamRegistration *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_attributes = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_attributes, (const char *)arg2);
    } else {
      arg1->m_attributes = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalParamRegistration_attributes_get(void * jarg1) {
  char * jresult ;
  OpalParamRegistration *arg1 = (OpalParamRegistration *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalParamRegistration *)jarg1; 
  result = (char *) ((arg1)->m_attributes);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_OpalParamRegistration() {
  void * jresult ;
  OpalParamRegistration *result = 0 ;
  
  result = (OpalParamRegistration *)new OpalParamRegistration();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_OpalParamRegistration(void * jarg1) {
  OpalParamRegistration *arg1 = (OpalParamRegistration *) 0 ;
  
  arg1 = (OpalParamRegistration *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalStatusRegistration_protocol_set(void * jarg1, char * jarg2) {
  OpalStatusRegistration *arg1 = (OpalStatusRegistration *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalStatusRegistration *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_protocol = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_protocol, (const char *)arg2);
    } else {
      arg1->m_protocol = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalStatusRegistration_protocol_get(void * jarg1) {
  char * jresult ;
  OpalStatusRegistration *arg1 = (OpalStatusRegistration *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalStatusRegistration *)jarg1; 
  result = (char *) ((arg1)->m_protocol);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalStatusRegistration_serverName_set(void * jarg1, char * jarg2) {
  OpalStatusRegistration *arg1 = (OpalStatusRegistration *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalStatusRegistration *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_serverName = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_serverName, (const char *)arg2);
    } else {
      arg1->m_serverName = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalStatusRegistration_serverName_get(void * jarg1) {
  char * jresult ;
  OpalStatusRegistration *arg1 = (OpalStatusRegistration *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalStatusRegistration *)jarg1; 
  result = (char *) ((arg1)->m_serverName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalStatusRegistration_error_set(void * jarg1, char * jarg2) {
  OpalStatusRegistration *arg1 = (OpalStatusRegistration *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalStatusRegistration *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_error = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_error, (const char *)arg2);
    } else {
      arg1->m_error = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalStatusRegistration_error_get(void * jarg1) {
  char * jresult ;
  OpalStatusRegistration *arg1 = (OpalStatusRegistration *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalStatusRegistration *)jarg1; 
  result = (char *) ((arg1)->m_error);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalStatusRegistration_status_set(void * jarg1, int jarg2) {
  OpalStatusRegistration *arg1 = (OpalStatusRegistration *) 0 ;
  OpalRegistrationStates arg2 ;
  
  arg1 = (OpalStatusRegistration *)jarg1; 
  arg2 = (OpalRegistrationStates)jarg2; 
  if (arg1) (arg1)->m_status = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_OpalStatusRegistration_status_get(void * jarg1) {
  int jresult ;
  OpalStatusRegistration *arg1 = (OpalStatusRegistration *) 0 ;
  OpalRegistrationStates result;
  
  arg1 = (OpalStatusRegistration *)jarg1; 
  result = (OpalRegistrationStates) ((arg1)->m_status);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalStatusRegistration_product_set(void * jarg1, void * jarg2) {
  OpalStatusRegistration *arg1 = (OpalStatusRegistration *) 0 ;
  OpalProductDescription *arg2 = (OpalProductDescription *) 0 ;
  
  arg1 = (OpalStatusRegistration *)jarg1; 
  arg2 = (OpalProductDescription *)jarg2; 
  if (arg1) (arg1)->m_product = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalStatusRegistration_product_get(void * jarg1) {
  void * jresult ;
  OpalStatusRegistration *arg1 = (OpalStatusRegistration *) 0 ;
  OpalProductDescription *result = 0 ;
  
  arg1 = (OpalStatusRegistration *)jarg1; 
  result = (OpalProductDescription *)& ((arg1)->m_product);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_OpalStatusRegistration() {
  void * jresult ;
  OpalStatusRegistration *result = 0 ;
  
  result = (OpalStatusRegistration *)new OpalStatusRegistration();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_OpalStatusRegistration(void * jarg1) {
  OpalStatusRegistration *arg1 = (OpalStatusRegistration *) 0 ;
  
  arg1 = (OpalStatusRegistration *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamSetUpCall_partyA_set(void * jarg1, char * jarg2) {
  OpalParamSetUpCall *arg1 = (OpalParamSetUpCall *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalParamSetUpCall *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_partyA = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_partyA, (const char *)arg2);
    } else {
      arg1->m_partyA = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalParamSetUpCall_partyA_get(void * jarg1) {
  char * jresult ;
  OpalParamSetUpCall *arg1 = (OpalParamSetUpCall *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalParamSetUpCall *)jarg1; 
  result = (char *) ((arg1)->m_partyA);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamSetUpCall_partyB_set(void * jarg1, char * jarg2) {
  OpalParamSetUpCall *arg1 = (OpalParamSetUpCall *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalParamSetUpCall *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_partyB = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_partyB, (const char *)arg2);
    } else {
      arg1->m_partyB = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalParamSetUpCall_partyB_get(void * jarg1) {
  char * jresult ;
  OpalParamSetUpCall *arg1 = (OpalParamSetUpCall *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalParamSetUpCall *)jarg1; 
  result = (char *) ((arg1)->m_partyB);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamSetUpCall_callToken_set(void * jarg1, char * jarg2) {
  OpalParamSetUpCall *arg1 = (OpalParamSetUpCall *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalParamSetUpCall *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_callToken = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_callToken, (const char *)arg2);
    } else {
      arg1->m_callToken = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalParamSetUpCall_callToken_get(void * jarg1) {
  char * jresult ;
  OpalParamSetUpCall *arg1 = (OpalParamSetUpCall *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalParamSetUpCall *)jarg1; 
  result = (char *) ((arg1)->m_callToken);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamSetUpCall_alertingType_set(void * jarg1, char * jarg2) {
  OpalParamSetUpCall *arg1 = (OpalParamSetUpCall *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalParamSetUpCall *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_alertingType = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_alertingType, (const char *)arg2);
    } else {
      arg1->m_alertingType = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalParamSetUpCall_alertingType_get(void * jarg1) {
  char * jresult ;
  OpalParamSetUpCall *arg1 = (OpalParamSetUpCall *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalParamSetUpCall *)jarg1; 
  result = (char *) ((arg1)->m_alertingType);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamSetUpCall_protocolCallId_set(void * jarg1, char * jarg2) {
  OpalParamSetUpCall *arg1 = (OpalParamSetUpCall *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalParamSetUpCall *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_protocolCallId = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_protocolCallId, (const char *)arg2);
    } else {
      arg1->m_protocolCallId = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalParamSetUpCall_protocolCallId_get(void * jarg1) {
  char * jresult ;
  OpalParamSetUpCall *arg1 = (OpalParamSetUpCall *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalParamSetUpCall *)jarg1; 
  result = (char *) ((arg1)->m_protocolCallId);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamSetUpCall_overrides_set(void * jarg1, void * jarg2) {
  OpalParamSetUpCall *arg1 = (OpalParamSetUpCall *) 0 ;
  OpalParamProtocol *arg2 = (OpalParamProtocol *) 0 ;
  
  arg1 = (OpalParamSetUpCall *)jarg1; 
  arg2 = (OpalParamProtocol *)jarg2; 
  if (arg1) (arg1)->m_overrides = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalParamSetUpCall_overrides_get(void * jarg1) {
  void * jresult ;
  OpalParamSetUpCall *arg1 = (OpalParamSetUpCall *) 0 ;
  OpalParamProtocol *result = 0 ;
  
  arg1 = (OpalParamSetUpCall *)jarg1; 
  result = (OpalParamProtocol *)& ((arg1)->m_overrides);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_OpalParamSetUpCall() {
  void * jresult ;
  OpalParamSetUpCall *result = 0 ;
  
  result = (OpalParamSetUpCall *)new OpalParamSetUpCall();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_OpalParamSetUpCall(void * jarg1) {
  OpalParamSetUpCall *arg1 = (OpalParamSetUpCall *) 0 ;
  
  arg1 = (OpalParamSetUpCall *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalStatusIncomingCall_callToken_set(void * jarg1, char * jarg2) {
  OpalStatusIncomingCall *arg1 = (OpalStatusIncomingCall *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalStatusIncomingCall *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_callToken = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_callToken, (const char *)arg2);
    } else {
      arg1->m_callToken = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalStatusIncomingCall_callToken_get(void * jarg1) {
  char * jresult ;
  OpalStatusIncomingCall *arg1 = (OpalStatusIncomingCall *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalStatusIncomingCall *)jarg1; 
  result = (char *) ((arg1)->m_callToken);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalStatusIncomingCall_localAddress_set(void * jarg1, char * jarg2) {
  OpalStatusIncomingCall *arg1 = (OpalStatusIncomingCall *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalStatusIncomingCall *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_localAddress = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_localAddress, (const char *)arg2);
    } else {
      arg1->m_localAddress = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalStatusIncomingCall_localAddress_get(void * jarg1) {
  char * jresult ;
  OpalStatusIncomingCall *arg1 = (OpalStatusIncomingCall *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalStatusIncomingCall *)jarg1; 
  result = (char *) ((arg1)->m_localAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalStatusIncomingCall_remoteAddress_set(void * jarg1, char * jarg2) {
  OpalStatusIncomingCall *arg1 = (OpalStatusIncomingCall *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalStatusIncomingCall *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_remoteAddress = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_remoteAddress, (const char *)arg2);
    } else {
      arg1->m_remoteAddress = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalStatusIncomingCall_remoteAddress_get(void * jarg1) {
  char * jresult ;
  OpalStatusIncomingCall *arg1 = (OpalStatusIncomingCall *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalStatusIncomingCall *)jarg1; 
  result = (char *) ((arg1)->m_remoteAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalStatusIncomingCall_remotePartyNumber_set(void * jarg1, char * jarg2) {
  OpalStatusIncomingCall *arg1 = (OpalStatusIncomingCall *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalStatusIncomingCall *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_remotePartyNumber = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_remotePartyNumber, (const char *)arg2);
    } else {
      arg1->m_remotePartyNumber = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalStatusIncomingCall_remotePartyNumber_get(void * jarg1) {
  char * jresult ;
  OpalStatusIncomingCall *arg1 = (OpalStatusIncomingCall *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalStatusIncomingCall *)jarg1; 
  result = (char *) ((arg1)->m_remotePartyNumber);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalStatusIncomingCall_remoteDisplayName_set(void * jarg1, char * jarg2) {
  OpalStatusIncomingCall *arg1 = (OpalStatusIncomingCall *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalStatusIncomingCall *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_remoteDisplayName = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_remoteDisplayName, (const char *)arg2);
    } else {
      arg1->m_remoteDisplayName = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalStatusIncomingCall_remoteDisplayName_get(void * jarg1) {
  char * jresult ;
  OpalStatusIncomingCall *arg1 = (OpalStatusIncomingCall *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalStatusIncomingCall *)jarg1; 
  result = (char *) ((arg1)->m_remoteDisplayName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalStatusIncomingCall_calledAddress_set(void * jarg1, char * jarg2) {
  OpalStatusIncomingCall *arg1 = (OpalStatusIncomingCall *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalStatusIncomingCall *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_calledAddress = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_calledAddress, (const char *)arg2);
    } else {
      arg1->m_calledAddress = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalStatusIncomingCall_calledAddress_get(void * jarg1) {
  char * jresult ;
  OpalStatusIncomingCall *arg1 = (OpalStatusIncomingCall *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalStatusIncomingCall *)jarg1; 
  result = (char *) ((arg1)->m_calledAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalStatusIncomingCall_calledPartyNumber_set(void * jarg1, char * jarg2) {
  OpalStatusIncomingCall *arg1 = (OpalStatusIncomingCall *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalStatusIncomingCall *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_calledPartyNumber = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_calledPartyNumber, (const char *)arg2);
    } else {
      arg1->m_calledPartyNumber = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalStatusIncomingCall_calledPartyNumber_get(void * jarg1) {
  char * jresult ;
  OpalStatusIncomingCall *arg1 = (OpalStatusIncomingCall *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalStatusIncomingCall *)jarg1; 
  result = (char *) ((arg1)->m_calledPartyNumber);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalStatusIncomingCall_product_set(void * jarg1, void * jarg2) {
  OpalStatusIncomingCall *arg1 = (OpalStatusIncomingCall *) 0 ;
  OpalProductDescription *arg2 = (OpalProductDescription *) 0 ;
  
  arg1 = (OpalStatusIncomingCall *)jarg1; 
  arg2 = (OpalProductDescription *)jarg2; 
  if (arg1) (arg1)->m_product = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalStatusIncomingCall_product_get(void * jarg1) {
  void * jresult ;
  OpalStatusIncomingCall *arg1 = (OpalStatusIncomingCall *) 0 ;
  OpalProductDescription *result = 0 ;
  
  arg1 = (OpalStatusIncomingCall *)jarg1; 
  result = (OpalProductDescription *)& ((arg1)->m_product);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalStatusIncomingCall_alertingType_set(void * jarg1, char * jarg2) {
  OpalStatusIncomingCall *arg1 = (OpalStatusIncomingCall *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalStatusIncomingCall *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_alertingType = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_alertingType, (const char *)arg2);
    } else {
      arg1->m_alertingType = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalStatusIncomingCall_alertingType_get(void * jarg1) {
  char * jresult ;
  OpalStatusIncomingCall *arg1 = (OpalStatusIncomingCall *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalStatusIncomingCall *)jarg1; 
  result = (char *) ((arg1)->m_alertingType);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalStatusIncomingCall_protocolCallId_set(void * jarg1, char * jarg2) {
  OpalStatusIncomingCall *arg1 = (OpalStatusIncomingCall *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalStatusIncomingCall *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_protocolCallId = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_protocolCallId, (const char *)arg2);
    } else {
      arg1->m_protocolCallId = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalStatusIncomingCall_protocolCallId_get(void * jarg1) {
  char * jresult ;
  OpalStatusIncomingCall *arg1 = (OpalStatusIncomingCall *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalStatusIncomingCall *)jarg1; 
  result = (char *) ((arg1)->m_protocolCallId);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalStatusIncomingCall_referredByAddress_set(void * jarg1, char * jarg2) {
  OpalStatusIncomingCall *arg1 = (OpalStatusIncomingCall *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalStatusIncomingCall *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_referredByAddress = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_referredByAddress, (const char *)arg2);
    } else {
      arg1->m_referredByAddress = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalStatusIncomingCall_referredByAddress_get(void * jarg1) {
  char * jresult ;
  OpalStatusIncomingCall *arg1 = (OpalStatusIncomingCall *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalStatusIncomingCall *)jarg1; 
  result = (char *) ((arg1)->m_referredByAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalStatusIncomingCall_redirectingNumber_set(void * jarg1, char * jarg2) {
  OpalStatusIncomingCall *arg1 = (OpalStatusIncomingCall *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalStatusIncomingCall *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_redirectingNumber = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_redirectingNumber, (const char *)arg2);
    } else {
      arg1->m_redirectingNumber = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalStatusIncomingCall_redirectingNumber_get(void * jarg1) {
  char * jresult ;
  OpalStatusIncomingCall *arg1 = (OpalStatusIncomingCall *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalStatusIncomingCall *)jarg1; 
  result = (char *) ((arg1)->m_redirectingNumber);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_OpalStatusIncomingCall() {
  void * jresult ;
  OpalStatusIncomingCall *result = 0 ;
  
  result = (OpalStatusIncomingCall *)new OpalStatusIncomingCall();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_OpalStatusIncomingCall(void * jarg1) {
  OpalStatusIncomingCall *arg1 = (OpalStatusIncomingCall *) 0 ;
  
  arg1 = (OpalStatusIncomingCall *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamAnswerCall_callToken_set(void * jarg1, char * jarg2) {
  OpalParamAnswerCall *arg1 = (OpalParamAnswerCall *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalParamAnswerCall *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_callToken = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_callToken, (const char *)arg2);
    } else {
      arg1->m_callToken = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalParamAnswerCall_callToken_get(void * jarg1) {
  char * jresult ;
  OpalParamAnswerCall *arg1 = (OpalParamAnswerCall *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalParamAnswerCall *)jarg1; 
  result = (char *) ((arg1)->m_callToken);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamAnswerCall_overrides_set(void * jarg1, void * jarg2) {
  OpalParamAnswerCall *arg1 = (OpalParamAnswerCall *) 0 ;
  OpalParamProtocol *arg2 = (OpalParamProtocol *) 0 ;
  
  arg1 = (OpalParamAnswerCall *)jarg1; 
  arg2 = (OpalParamProtocol *)jarg2; 
  if (arg1) (arg1)->m_overrides = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalParamAnswerCall_overrides_get(void * jarg1) {
  void * jresult ;
  OpalParamAnswerCall *arg1 = (OpalParamAnswerCall *) 0 ;
  OpalParamProtocol *result = 0 ;
  
  arg1 = (OpalParamAnswerCall *)jarg1; 
  result = (OpalParamProtocol *)& ((arg1)->m_overrides);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamAnswerCall_withMedia_set(void * jarg1, unsigned int jarg2) {
  OpalParamAnswerCall *arg1 = (OpalParamAnswerCall *) 0 ;
  unsigned int arg2 ;
  
  arg1 = (OpalParamAnswerCall *)jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_withMedia = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_OpalParamAnswerCall_withMedia_get(void * jarg1) {
  unsigned int jresult ;
  OpalParamAnswerCall *arg1 = (OpalParamAnswerCall *) 0 ;
  unsigned int result;
  
  arg1 = (OpalParamAnswerCall *)jarg1; 
  result = (unsigned int) ((arg1)->m_withMedia);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_OpalParamAnswerCall() {
  void * jresult ;
  OpalParamAnswerCall *result = 0 ;
  
  result = (OpalParamAnswerCall *)new OpalParamAnswerCall();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_OpalParamAnswerCall(void * jarg1) {
  OpalParamAnswerCall *arg1 = (OpalParamAnswerCall *) 0 ;
  
  arg1 = (OpalParamAnswerCall *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalStatusMediaStream_callToken_set(void * jarg1, char * jarg2) {
  OpalStatusMediaStream *arg1 = (OpalStatusMediaStream *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalStatusMediaStream *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_callToken = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_callToken, (const char *)arg2);
    } else {
      arg1->m_callToken = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalStatusMediaStream_callToken_get(void * jarg1) {
  char * jresult ;
  OpalStatusMediaStream *arg1 = (OpalStatusMediaStream *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalStatusMediaStream *)jarg1; 
  result = (char *) ((arg1)->m_callToken);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalStatusMediaStream_identifier_set(void * jarg1, char * jarg2) {
  OpalStatusMediaStream *arg1 = (OpalStatusMediaStream *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalStatusMediaStream *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_identifier = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_identifier, (const char *)arg2);
    } else {
      arg1->m_identifier = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalStatusMediaStream_identifier_get(void * jarg1) {
  char * jresult ;
  OpalStatusMediaStream *arg1 = (OpalStatusMediaStream *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalStatusMediaStream *)jarg1; 
  result = (char *) ((arg1)->m_identifier);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalStatusMediaStream_type_set(void * jarg1, char * jarg2) {
  OpalStatusMediaStream *arg1 = (OpalStatusMediaStream *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalStatusMediaStream *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_type = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_type, (const char *)arg2);
    } else {
      arg1->m_type = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalStatusMediaStream_type_get(void * jarg1) {
  char * jresult ;
  OpalStatusMediaStream *arg1 = (OpalStatusMediaStream *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalStatusMediaStream *)jarg1; 
  result = (char *) ((arg1)->m_type);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalStatusMediaStream_format_set(void * jarg1, char * jarg2) {
  OpalStatusMediaStream *arg1 = (OpalStatusMediaStream *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalStatusMediaStream *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_format = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_format, (const char *)arg2);
    } else {
      arg1->m_format = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalStatusMediaStream_format_get(void * jarg1) {
  char * jresult ;
  OpalStatusMediaStream *arg1 = (OpalStatusMediaStream *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalStatusMediaStream *)jarg1; 
  result = (char *) ((arg1)->m_format);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalStatusMediaStream_state_set(void * jarg1, int jarg2) {
  OpalStatusMediaStream *arg1 = (OpalStatusMediaStream *) 0 ;
  OpalMediaStates arg2 ;
  
  arg1 = (OpalStatusMediaStream *)jarg1; 
  arg2 = (OpalMediaStates)jarg2; 
  if (arg1) (arg1)->m_state = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_OpalStatusMediaStream_state_get(void * jarg1) {
  int jresult ;
  OpalStatusMediaStream *arg1 = (OpalStatusMediaStream *) 0 ;
  OpalMediaStates result;
  
  arg1 = (OpalStatusMediaStream *)jarg1; 
  result = (OpalMediaStates) ((arg1)->m_state);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalStatusMediaStream_volume_set(void * jarg1, int jarg2) {
  OpalStatusMediaStream *arg1 = (OpalStatusMediaStream *) 0 ;
  int arg2 ;
  
  arg1 = (OpalStatusMediaStream *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->m_volume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_OpalStatusMediaStream_volume_get(void * jarg1) {
  int jresult ;
  OpalStatusMediaStream *arg1 = (OpalStatusMediaStream *) 0 ;
  int result;
  
  arg1 = (OpalStatusMediaStream *)jarg1; 
  result = (int) ((arg1)->m_volume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_OpalStatusMediaStream() {
  void * jresult ;
  OpalStatusMediaStream *result = 0 ;
  
  result = (OpalStatusMediaStream *)new OpalStatusMediaStream();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_OpalStatusMediaStream(void * jarg1) {
  OpalStatusMediaStream *arg1 = (OpalStatusMediaStream *) 0 ;
  
  arg1 = (OpalStatusMediaStream *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamSetUserData_callToken_set(void * jarg1, char * jarg2) {
  OpalParamSetUserData *arg1 = (OpalParamSetUserData *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalParamSetUserData *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_callToken = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_callToken, (const char *)arg2);
    } else {
      arg1->m_callToken = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalParamSetUserData_callToken_get(void * jarg1) {
  char * jresult ;
  OpalParamSetUserData *arg1 = (OpalParamSetUserData *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalParamSetUserData *)jarg1; 
  result = (char *) ((arg1)->m_callToken);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamSetUserData_userData_set(void * jarg1, void * jarg2) {
  OpalParamSetUserData *arg1 = (OpalParamSetUserData *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = (OpalParamSetUserData *)jarg1; 
  arg2 = (void *)jarg2; 
  if (arg1) (arg1)->m_userData = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalParamSetUserData_userData_get(void * jarg1) {
  void * jresult ;
  OpalParamSetUserData *arg1 = (OpalParamSetUserData *) 0 ;
  void *result = 0 ;
  
  arg1 = (OpalParamSetUserData *)jarg1; 
  result = (void *) ((arg1)->m_userData);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_OpalParamSetUserData() {
  void * jresult ;
  OpalParamSetUserData *result = 0 ;
  
  result = (OpalParamSetUserData *)new OpalParamSetUserData();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_OpalParamSetUserData(void * jarg1) {
  OpalParamSetUserData *arg1 = (OpalParamSetUserData *) 0 ;
  
  arg1 = (OpalParamSetUserData *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalStatusUserInput_callToken_set(void * jarg1, char * jarg2) {
  OpalStatusUserInput *arg1 = (OpalStatusUserInput *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalStatusUserInput *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_callToken = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_callToken, (const char *)arg2);
    } else {
      arg1->m_callToken = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalStatusUserInput_callToken_get(void * jarg1) {
  char * jresult ;
  OpalStatusUserInput *arg1 = (OpalStatusUserInput *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalStatusUserInput *)jarg1; 
  result = (char *) ((arg1)->m_callToken);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalStatusUserInput_userInput_set(void * jarg1, char * jarg2) {
  OpalStatusUserInput *arg1 = (OpalStatusUserInput *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalStatusUserInput *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_userInput = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_userInput, (const char *)arg2);
    } else {
      arg1->m_userInput = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalStatusUserInput_userInput_get(void * jarg1) {
  char * jresult ;
  OpalStatusUserInput *arg1 = (OpalStatusUserInput *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalStatusUserInput *)jarg1; 
  result = (char *) ((arg1)->m_userInput);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalStatusUserInput_duration_set(void * jarg1, unsigned int jarg2) {
  OpalStatusUserInput *arg1 = (OpalStatusUserInput *) 0 ;
  unsigned int arg2 ;
  
  arg1 = (OpalStatusUserInput *)jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_duration = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_OpalStatusUserInput_duration_get(void * jarg1) {
  unsigned int jresult ;
  OpalStatusUserInput *arg1 = (OpalStatusUserInput *) 0 ;
  unsigned int result;
  
  arg1 = (OpalStatusUserInput *)jarg1; 
  result = (unsigned int) ((arg1)->m_duration);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_OpalStatusUserInput() {
  void * jresult ;
  OpalStatusUserInput *result = 0 ;
  
  result = (OpalStatusUserInput *)new OpalStatusUserInput();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_OpalStatusUserInput(void * jarg1) {
  OpalStatusUserInput *arg1 = (OpalStatusUserInput *) 0 ;
  
  arg1 = (OpalStatusUserInput *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalStatusMessageWaiting_party_set(void * jarg1, char * jarg2) {
  OpalStatusMessageWaiting *arg1 = (OpalStatusMessageWaiting *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalStatusMessageWaiting *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_party = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_party, (const char *)arg2);
    } else {
      arg1->m_party = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalStatusMessageWaiting_party_get(void * jarg1) {
  char * jresult ;
  OpalStatusMessageWaiting *arg1 = (OpalStatusMessageWaiting *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalStatusMessageWaiting *)jarg1; 
  result = (char *) ((arg1)->m_party);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalStatusMessageWaiting_type_set(void * jarg1, char * jarg2) {
  OpalStatusMessageWaiting *arg1 = (OpalStatusMessageWaiting *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalStatusMessageWaiting *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_type = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_type, (const char *)arg2);
    } else {
      arg1->m_type = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalStatusMessageWaiting_type_get(void * jarg1) {
  char * jresult ;
  OpalStatusMessageWaiting *arg1 = (OpalStatusMessageWaiting *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalStatusMessageWaiting *)jarg1; 
  result = (char *) ((arg1)->m_type);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalStatusMessageWaiting_extraInfo_set(void * jarg1, char * jarg2) {
  OpalStatusMessageWaiting *arg1 = (OpalStatusMessageWaiting *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalStatusMessageWaiting *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_extraInfo = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_extraInfo, (const char *)arg2);
    } else {
      arg1->m_extraInfo = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalStatusMessageWaiting_extraInfo_get(void * jarg1) {
  char * jresult ;
  OpalStatusMessageWaiting *arg1 = (OpalStatusMessageWaiting *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalStatusMessageWaiting *)jarg1; 
  result = (char *) ((arg1)->m_extraInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_OpalStatusMessageWaiting() {
  void * jresult ;
  OpalStatusMessageWaiting *result = 0 ;
  
  result = (OpalStatusMessageWaiting *)new OpalStatusMessageWaiting();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_OpalStatusMessageWaiting(void * jarg1) {
  OpalStatusMessageWaiting *arg1 = (OpalStatusMessageWaiting *) 0 ;
  
  arg1 = (OpalStatusMessageWaiting *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalStatusLineAppearance_line_set(void * jarg1, char * jarg2) {
  OpalStatusLineAppearance *arg1 = (OpalStatusLineAppearance *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalStatusLineAppearance *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_line = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_line, (const char *)arg2);
    } else {
      arg1->m_line = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalStatusLineAppearance_line_get(void * jarg1) {
  char * jresult ;
  OpalStatusLineAppearance *arg1 = (OpalStatusLineAppearance *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalStatusLineAppearance *)jarg1; 
  result = (char *) ((arg1)->m_line);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalStatusLineAppearance_state_set(void * jarg1, int jarg2) {
  OpalStatusLineAppearance *arg1 = (OpalStatusLineAppearance *) 0 ;
  OpalLineAppearanceStates arg2 ;
  
  arg1 = (OpalStatusLineAppearance *)jarg1; 
  arg2 = (OpalLineAppearanceStates)jarg2; 
  if (arg1) (arg1)->m_state = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_OpalStatusLineAppearance_state_get(void * jarg1) {
  int jresult ;
  OpalStatusLineAppearance *arg1 = (OpalStatusLineAppearance *) 0 ;
  OpalLineAppearanceStates result;
  
  arg1 = (OpalStatusLineAppearance *)jarg1; 
  result = (OpalLineAppearanceStates) ((arg1)->m_state);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalStatusLineAppearance_appearance_set(void * jarg1, int jarg2) {
  OpalStatusLineAppearance *arg1 = (OpalStatusLineAppearance *) 0 ;
  int arg2 ;
  
  arg1 = (OpalStatusLineAppearance *)jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->m_appearance = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_OpalStatusLineAppearance_appearance_get(void * jarg1) {
  int jresult ;
  OpalStatusLineAppearance *arg1 = (OpalStatusLineAppearance *) 0 ;
  int result;
  
  arg1 = (OpalStatusLineAppearance *)jarg1; 
  result = (int) ((arg1)->m_appearance);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalStatusLineAppearance_callId_set(void * jarg1, char * jarg2) {
  OpalStatusLineAppearance *arg1 = (OpalStatusLineAppearance *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalStatusLineAppearance *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_callId = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_callId, (const char *)arg2);
    } else {
      arg1->m_callId = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalStatusLineAppearance_callId_get(void * jarg1) {
  char * jresult ;
  OpalStatusLineAppearance *arg1 = (OpalStatusLineAppearance *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalStatusLineAppearance *)jarg1; 
  result = (char *) ((arg1)->m_callId);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalStatusLineAppearance_partyA_set(void * jarg1, char * jarg2) {
  OpalStatusLineAppearance *arg1 = (OpalStatusLineAppearance *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalStatusLineAppearance *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_partyA = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_partyA, (const char *)arg2);
    } else {
      arg1->m_partyA = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalStatusLineAppearance_partyA_get(void * jarg1) {
  char * jresult ;
  OpalStatusLineAppearance *arg1 = (OpalStatusLineAppearance *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalStatusLineAppearance *)jarg1; 
  result = (char *) ((arg1)->m_partyA);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalStatusLineAppearance_partyB_set(void * jarg1, char * jarg2) {
  OpalStatusLineAppearance *arg1 = (OpalStatusLineAppearance *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalStatusLineAppearance *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_partyB = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_partyB, (const char *)arg2);
    } else {
      arg1->m_partyB = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalStatusLineAppearance_partyB_get(void * jarg1) {
  char * jresult ;
  OpalStatusLineAppearance *arg1 = (OpalStatusLineAppearance *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalStatusLineAppearance *)jarg1; 
  result = (char *) ((arg1)->m_partyB);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_OpalStatusLineAppearance() {
  void * jresult ;
  OpalStatusLineAppearance *result = 0 ;
  
  result = (OpalStatusLineAppearance *)new OpalStatusLineAppearance();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_OpalStatusLineAppearance(void * jarg1) {
  OpalStatusLineAppearance *arg1 = (OpalStatusLineAppearance *) 0 ;
  
  arg1 = (OpalStatusLineAppearance *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalPresenceStatus_entity_set(void * jarg1, char * jarg2) {
  OpalPresenceStatus *arg1 = (OpalPresenceStatus *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalPresenceStatus *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_entity = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_entity, (const char *)arg2);
    } else {
      arg1->m_entity = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalPresenceStatus_entity_get(void * jarg1) {
  char * jresult ;
  OpalPresenceStatus *arg1 = (OpalPresenceStatus *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalPresenceStatus *)jarg1; 
  result = (char *) ((arg1)->m_entity);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalPresenceStatus_target_set(void * jarg1, char * jarg2) {
  OpalPresenceStatus *arg1 = (OpalPresenceStatus *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalPresenceStatus *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_target = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_target, (const char *)arg2);
    } else {
      arg1->m_target = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalPresenceStatus_target_get(void * jarg1) {
  char * jresult ;
  OpalPresenceStatus *arg1 = (OpalPresenceStatus *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalPresenceStatus *)jarg1; 
  result = (char *) ((arg1)->m_target);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalPresenceStatus_service_set(void * jarg1, char * jarg2) {
  OpalPresenceStatus *arg1 = (OpalPresenceStatus *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalPresenceStatus *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_service = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_service, (const char *)arg2);
    } else {
      arg1->m_service = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalPresenceStatus_service_get(void * jarg1) {
  char * jresult ;
  OpalPresenceStatus *arg1 = (OpalPresenceStatus *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalPresenceStatus *)jarg1; 
  result = (char *) ((arg1)->m_service);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalPresenceStatus_contact_set(void * jarg1, char * jarg2) {
  OpalPresenceStatus *arg1 = (OpalPresenceStatus *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalPresenceStatus *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_contact = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_contact, (const char *)arg2);
    } else {
      arg1->m_contact = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalPresenceStatus_contact_get(void * jarg1) {
  char * jresult ;
  OpalPresenceStatus *arg1 = (OpalPresenceStatus *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalPresenceStatus *)jarg1; 
  result = (char *) ((arg1)->m_contact);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalPresenceStatus_capabilities_set(void * jarg1, char * jarg2) {
  OpalPresenceStatus *arg1 = (OpalPresenceStatus *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalPresenceStatus *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_capabilities = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_capabilities, (const char *)arg2);
    } else {
      arg1->m_capabilities = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalPresenceStatus_capabilities_get(void * jarg1) {
  char * jresult ;
  OpalPresenceStatus *arg1 = (OpalPresenceStatus *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalPresenceStatus *)jarg1; 
  result = (char *) ((arg1)->m_capabilities);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalPresenceStatus_state_set(void * jarg1, int jarg2) {
  OpalPresenceStatus *arg1 = (OpalPresenceStatus *) 0 ;
  OpalPresenceStates arg2 ;
  
  arg1 = (OpalPresenceStatus *)jarg1; 
  arg2 = (OpalPresenceStates)jarg2; 
  if (arg1) (arg1)->m_state = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_OpalPresenceStatus_state_get(void * jarg1) {
  int jresult ;
  OpalPresenceStatus *arg1 = (OpalPresenceStatus *) 0 ;
  OpalPresenceStates result;
  
  arg1 = (OpalPresenceStatus *)jarg1; 
  result = (OpalPresenceStates) ((arg1)->m_state);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalPresenceStatus_activities_set(void * jarg1, char * jarg2) {
  OpalPresenceStatus *arg1 = (OpalPresenceStatus *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalPresenceStatus *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_activities = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_activities, (const char *)arg2);
    } else {
      arg1->m_activities = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalPresenceStatus_activities_get(void * jarg1) {
  char * jresult ;
  OpalPresenceStatus *arg1 = (OpalPresenceStatus *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalPresenceStatus *)jarg1; 
  result = (char *) ((arg1)->m_activities);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalPresenceStatus_note_set(void * jarg1, char * jarg2) {
  OpalPresenceStatus *arg1 = (OpalPresenceStatus *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalPresenceStatus *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_note = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_note, (const char *)arg2);
    } else {
      arg1->m_note = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalPresenceStatus_note_get(void * jarg1) {
  char * jresult ;
  OpalPresenceStatus *arg1 = (OpalPresenceStatus *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalPresenceStatus *)jarg1; 
  result = (char *) ((arg1)->m_note);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalPresenceStatus_infoType_set(void * jarg1, char * jarg2) {
  OpalPresenceStatus *arg1 = (OpalPresenceStatus *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalPresenceStatus *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_infoType = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_infoType, (const char *)arg2);
    } else {
      arg1->m_infoType = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalPresenceStatus_infoType_get(void * jarg1) {
  char * jresult ;
  OpalPresenceStatus *arg1 = (OpalPresenceStatus *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalPresenceStatus *)jarg1; 
  result = (char *) ((arg1)->m_infoType);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalPresenceStatus_infoData_set(void * jarg1, char * jarg2) {
  OpalPresenceStatus *arg1 = (OpalPresenceStatus *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalPresenceStatus *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_infoData = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_infoData, (const char *)arg2);
    } else {
      arg1->m_infoData = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalPresenceStatus_infoData_get(void * jarg1) {
  char * jresult ;
  OpalPresenceStatus *arg1 = (OpalPresenceStatus *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalPresenceStatus *)jarg1; 
  result = (char *) ((arg1)->m_infoData);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_OpalPresenceStatus() {
  void * jresult ;
  OpalPresenceStatus *result = 0 ;
  
  result = (OpalPresenceStatus *)new OpalPresenceStatus();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_OpalPresenceStatus(void * jarg1) {
  OpalPresenceStatus *arg1 = (OpalPresenceStatus *) 0 ;
  
  arg1 = (OpalPresenceStatus *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalInstantMessage_from_set(void * jarg1, char * jarg2) {
  OpalInstantMessage *arg1 = (OpalInstantMessage *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalInstantMessage *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_from = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_from, (const char *)arg2);
    } else {
      arg1->m_from = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalInstantMessage_from_get(void * jarg1) {
  char * jresult ;
  OpalInstantMessage *arg1 = (OpalInstantMessage *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalInstantMessage *)jarg1; 
  result = (char *) ((arg1)->m_from);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalInstantMessage_to_set(void * jarg1, char * jarg2) {
  OpalInstantMessage *arg1 = (OpalInstantMessage *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalInstantMessage *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_to = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_to, (const char *)arg2);
    } else {
      arg1->m_to = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalInstantMessage_to_get(void * jarg1) {
  char * jresult ;
  OpalInstantMessage *arg1 = (OpalInstantMessage *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalInstantMessage *)jarg1; 
  result = (char *) ((arg1)->m_to);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalInstantMessage_host_set(void * jarg1, char * jarg2) {
  OpalInstantMessage *arg1 = (OpalInstantMessage *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalInstantMessage *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_host = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_host, (const char *)arg2);
    } else {
      arg1->m_host = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalInstantMessage_host_get(void * jarg1) {
  char * jresult ;
  OpalInstantMessage *arg1 = (OpalInstantMessage *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalInstantMessage *)jarg1; 
  result = (char *) ((arg1)->m_host);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalInstantMessage_conversationId_set(void * jarg1, char * jarg2) {
  OpalInstantMessage *arg1 = (OpalInstantMessage *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalInstantMessage *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_conversationId = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_conversationId, (const char *)arg2);
    } else {
      arg1->m_conversationId = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalInstantMessage_conversationId_get(void * jarg1) {
  char * jresult ;
  OpalInstantMessage *arg1 = (OpalInstantMessage *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalInstantMessage *)jarg1; 
  result = (char *) ((arg1)->m_conversationId);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalInstantMessage_textBody_set(void * jarg1, char * jarg2) {
  OpalInstantMessage *arg1 = (OpalInstantMessage *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalInstantMessage *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_textBody = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_textBody, (const char *)arg2);
    } else {
      arg1->m_textBody = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalInstantMessage_textBody_get(void * jarg1) {
  char * jresult ;
  OpalInstantMessage *arg1 = (OpalInstantMessage *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalInstantMessage *)jarg1; 
  result = (char *) ((arg1)->m_textBody);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalInstantMessage_bodyCount_set(void * jarg1, unsigned int jarg2) {
  OpalInstantMessage *arg1 = (OpalInstantMessage *) 0 ;
  unsigned int arg2 ;
  
  arg1 = (OpalInstantMessage *)jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_bodyCount = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_OpalInstantMessage_bodyCount_get(void * jarg1) {
  unsigned int jresult ;
  OpalInstantMessage *arg1 = (OpalInstantMessage *) 0 ;
  unsigned int result;
  
  arg1 = (OpalInstantMessage *)jarg1; 
  result = (unsigned int) ((arg1)->m_bodyCount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalInstantMessage_mimeType_set(void * jarg1, void * jarg2) {
  OpalInstantMessage *arg1 = (OpalInstantMessage *) 0 ;
  char **arg2 = (char **) 0 ;
  
  arg1 = (OpalInstantMessage *)jarg1; 
  arg2 = (char **)jarg2; 
  if (arg1) (arg1)->m_mimeType = (char const **)arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalInstantMessage_mimeType_get(void * jarg1) {
  void * jresult ;
  OpalInstantMessage *arg1 = (OpalInstantMessage *) 0 ;
  char **result = 0 ;
  
  arg1 = (OpalInstantMessage *)jarg1; 
  result = (char **) ((arg1)->m_mimeType);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalInstantMessage_bodies_set(void * jarg1, void * jarg2) {
  OpalInstantMessage *arg1 = (OpalInstantMessage *) 0 ;
  char **arg2 = (char **) 0 ;
  
  arg1 = (OpalInstantMessage *)jarg1; 
  arg2 = (char **)jarg2; 
  if (arg1) (arg1)->m_bodies = (char const **)arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalInstantMessage_bodies_get(void * jarg1) {
  void * jresult ;
  OpalInstantMessage *arg1 = (OpalInstantMessage *) 0 ;
  char **result = 0 ;
  
  arg1 = (OpalInstantMessage *)jarg1; 
  result = (char **) ((arg1)->m_bodies);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalInstantMessage_messageId_set(void * jarg1, unsigned int jarg2) {
  OpalInstantMessage *arg1 = (OpalInstantMessage *) 0 ;
  unsigned int arg2 ;
  
  arg1 = (OpalInstantMessage *)jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_messageId = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_OpalInstantMessage_messageId_get(void * jarg1) {
  unsigned int jresult ;
  OpalInstantMessage *arg1 = (OpalInstantMessage *) 0 ;
  unsigned int result;
  
  arg1 = (OpalInstantMessage *)jarg1; 
  result = (unsigned int) ((arg1)->m_messageId);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_OpalInstantMessage() {
  void * jresult ;
  OpalInstantMessage *result = 0 ;
  
  result = (OpalInstantMessage *)new OpalInstantMessage();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_OpalInstantMessage(void * jarg1) {
  OpalInstantMessage *arg1 = (OpalInstantMessage *) 0 ;
  
  arg1 = (OpalInstantMessage *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamRecording_callToken_set(void * jarg1, char * jarg2) {
  OpalParamRecording *arg1 = (OpalParamRecording *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalParamRecording *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_callToken = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_callToken, (const char *)arg2);
    } else {
      arg1->m_callToken = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalParamRecording_callToken_get(void * jarg1) {
  char * jresult ;
  OpalParamRecording *arg1 = (OpalParamRecording *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalParamRecording *)jarg1; 
  result = (char *) ((arg1)->m_callToken);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamRecording_file_set(void * jarg1, char * jarg2) {
  OpalParamRecording *arg1 = (OpalParamRecording *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalParamRecording *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_file = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_file, (const char *)arg2);
    } else {
      arg1->m_file = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalParamRecording_file_get(void * jarg1) {
  char * jresult ;
  OpalParamRecording *arg1 = (OpalParamRecording *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalParamRecording *)jarg1; 
  result = (char *) ((arg1)->m_file);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamRecording_channels_set(void * jarg1, unsigned int jarg2) {
  OpalParamRecording *arg1 = (OpalParamRecording *) 0 ;
  unsigned int arg2 ;
  
  arg1 = (OpalParamRecording *)jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_channels = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_OpalParamRecording_channels_get(void * jarg1) {
  unsigned int jresult ;
  OpalParamRecording *arg1 = (OpalParamRecording *) 0 ;
  unsigned int result;
  
  arg1 = (OpalParamRecording *)jarg1; 
  result = (unsigned int) ((arg1)->m_channels);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamRecording_audioFormat_set(void * jarg1, char * jarg2) {
  OpalParamRecording *arg1 = (OpalParamRecording *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalParamRecording *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_audioFormat = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_audioFormat, (const char *)arg2);
    } else {
      arg1->m_audioFormat = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalParamRecording_audioFormat_get(void * jarg1) {
  char * jresult ;
  OpalParamRecording *arg1 = (OpalParamRecording *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalParamRecording *)jarg1; 
  result = (char *) ((arg1)->m_audioFormat);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamRecording_videoFormat_set(void * jarg1, char * jarg2) {
  OpalParamRecording *arg1 = (OpalParamRecording *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalParamRecording *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_videoFormat = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_videoFormat, (const char *)arg2);
    } else {
      arg1->m_videoFormat = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalParamRecording_videoFormat_get(void * jarg1) {
  char * jresult ;
  OpalParamRecording *arg1 = (OpalParamRecording *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalParamRecording *)jarg1; 
  result = (char *) ((arg1)->m_videoFormat);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamRecording_videoWidth_set(void * jarg1, unsigned int jarg2) {
  OpalParamRecording *arg1 = (OpalParamRecording *) 0 ;
  unsigned int arg2 ;
  
  arg1 = (OpalParamRecording *)jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_videoWidth = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_OpalParamRecording_videoWidth_get(void * jarg1) {
  unsigned int jresult ;
  OpalParamRecording *arg1 = (OpalParamRecording *) 0 ;
  unsigned int result;
  
  arg1 = (OpalParamRecording *)jarg1; 
  result = (unsigned int) ((arg1)->m_videoWidth);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamRecording_videoHeight_set(void * jarg1, unsigned int jarg2) {
  OpalParamRecording *arg1 = (OpalParamRecording *) 0 ;
  unsigned int arg2 ;
  
  arg1 = (OpalParamRecording *)jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_videoHeight = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_OpalParamRecording_videoHeight_get(void * jarg1) {
  unsigned int jresult ;
  OpalParamRecording *arg1 = (OpalParamRecording *) 0 ;
  unsigned int result;
  
  arg1 = (OpalParamRecording *)jarg1; 
  result = (unsigned int) ((arg1)->m_videoHeight);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamRecording_videoRate_set(void * jarg1, unsigned int jarg2) {
  OpalParamRecording *arg1 = (OpalParamRecording *) 0 ;
  unsigned int arg2 ;
  
  arg1 = (OpalParamRecording *)jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->m_videoRate = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_OpalParamRecording_videoRate_get(void * jarg1) {
  unsigned int jresult ;
  OpalParamRecording *arg1 = (OpalParamRecording *) 0 ;
  unsigned int result;
  
  arg1 = (OpalParamRecording *)jarg1; 
  result = (unsigned int) ((arg1)->m_videoRate);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamRecording_videoMixing_set(void * jarg1, int jarg2) {
  OpalParamRecording *arg1 = (OpalParamRecording *) 0 ;
  OpalVideoRecordMixMode arg2 ;
  
  arg1 = (OpalParamRecording *)jarg1; 
  arg2 = (OpalVideoRecordMixMode)jarg2; 
  if (arg1) (arg1)->m_videoMixing = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_OpalParamRecording_videoMixing_get(void * jarg1) {
  int jresult ;
  OpalParamRecording *arg1 = (OpalParamRecording *) 0 ;
  OpalVideoRecordMixMode result;
  
  arg1 = (OpalParamRecording *)jarg1; 
  result = (OpalVideoRecordMixMode) ((arg1)->m_videoMixing);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_OpalParamRecording() {
  void * jresult ;
  OpalParamRecording *result = 0 ;
  
  result = (OpalParamRecording *)new OpalParamRecording();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_OpalParamRecording(void * jarg1) {
  OpalParamRecording *arg1 = (OpalParamRecording *) 0 ;
  
  arg1 = (OpalParamRecording *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalStatusTransferCall_callToken_set(void * jarg1, char * jarg2) {
  OpalStatusTransferCall *arg1 = (OpalStatusTransferCall *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalStatusTransferCall *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_callToken = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_callToken, (const char *)arg2);
    } else {
      arg1->m_callToken = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalStatusTransferCall_callToken_get(void * jarg1) {
  char * jresult ;
  OpalStatusTransferCall *arg1 = (OpalStatusTransferCall *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalStatusTransferCall *)jarg1; 
  result = (char *) ((arg1)->m_callToken);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalStatusTransferCall_protocolCallId_set(void * jarg1, char * jarg2) {
  OpalStatusTransferCall *arg1 = (OpalStatusTransferCall *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalStatusTransferCall *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_protocolCallId = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_protocolCallId, (const char *)arg2);
    } else {
      arg1->m_protocolCallId = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalStatusTransferCall_protocolCallId_get(void * jarg1) {
  char * jresult ;
  OpalStatusTransferCall *arg1 = (OpalStatusTransferCall *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalStatusTransferCall *)jarg1; 
  result = (char *) ((arg1)->m_protocolCallId);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalStatusTransferCall_result_set(void * jarg1, char * jarg2) {
  OpalStatusTransferCall *arg1 = (OpalStatusTransferCall *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalStatusTransferCall *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_result = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_result, (const char *)arg2);
    } else {
      arg1->m_result = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalStatusTransferCall_result_get(void * jarg1) {
  char * jresult ;
  OpalStatusTransferCall *arg1 = (OpalStatusTransferCall *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalStatusTransferCall *)jarg1; 
  result = (char *) ((arg1)->m_result);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalStatusTransferCall_info_set(void * jarg1, char * jarg2) {
  OpalStatusTransferCall *arg1 = (OpalStatusTransferCall *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalStatusTransferCall *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_info = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_info, (const char *)arg2);
    } else {
      arg1->m_info = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalStatusTransferCall_info_get(void * jarg1) {
  char * jresult ;
  OpalStatusTransferCall *arg1 = (OpalStatusTransferCall *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalStatusTransferCall *)jarg1; 
  result = (char *) ((arg1)->m_info);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_OpalStatusTransferCall() {
  void * jresult ;
  OpalStatusTransferCall *result = 0 ;
  
  result = (OpalStatusTransferCall *)new OpalStatusTransferCall();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_OpalStatusTransferCall(void * jarg1) {
  OpalStatusTransferCall *arg1 = (OpalStatusTransferCall *) 0 ;
  
  arg1 = (OpalStatusTransferCall *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalStatusIVR_callToken_set(void * jarg1, char * jarg2) {
  OpalStatusIVR *arg1 = (OpalStatusIVR *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalStatusIVR *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_callToken = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_callToken, (const char *)arg2);
    } else {
      arg1->m_callToken = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalStatusIVR_callToken_get(void * jarg1) {
  char * jresult ;
  OpalStatusIVR *arg1 = (OpalStatusIVR *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalStatusIVR *)jarg1; 
  result = (char *) ((arg1)->m_callToken);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalStatusIVR_variables_set(void * jarg1, char * jarg2) {
  OpalStatusIVR *arg1 = (OpalStatusIVR *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalStatusIVR *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_variables = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_variables, (const char *)arg2);
    } else {
      arg1->m_variables = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalStatusIVR_variables_get(void * jarg1) {
  char * jresult ;
  OpalStatusIVR *arg1 = (OpalStatusIVR *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalStatusIVR *)jarg1; 
  result = (char *) ((arg1)->m_variables);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_OpalStatusIVR() {
  void * jresult ;
  OpalStatusIVR *result = 0 ;
  
  result = (OpalStatusIVR *)new OpalStatusIVR();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_OpalStatusIVR(void * jarg1) {
  OpalStatusIVR *arg1 = (OpalStatusIVR *) 0 ;
  
  arg1 = (OpalStatusIVR *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalStatusCallCleared_callToken_set(void * jarg1, char * jarg2) {
  OpalStatusCallCleared *arg1 = (OpalStatusCallCleared *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalStatusCallCleared *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_callToken = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_callToken, (const char *)arg2);
    } else {
      arg1->m_callToken = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalStatusCallCleared_callToken_get(void * jarg1) {
  char * jresult ;
  OpalStatusCallCleared *arg1 = (OpalStatusCallCleared *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalStatusCallCleared *)jarg1; 
  result = (char *) ((arg1)->m_callToken);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalStatusCallCleared_reason_set(void * jarg1, char * jarg2) {
  OpalStatusCallCleared *arg1 = (OpalStatusCallCleared *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalStatusCallCleared *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_reason = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_reason, (const char *)arg2);
    } else {
      arg1->m_reason = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalStatusCallCleared_reason_get(void * jarg1) {
  char * jresult ;
  OpalStatusCallCleared *arg1 = (OpalStatusCallCleared *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalStatusCallCleared *)jarg1; 
  result = (char *) ((arg1)->m_reason);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_OpalStatusCallCleared() {
  void * jresult ;
  OpalStatusCallCleared *result = 0 ;
  
  result = (OpalStatusCallCleared *)new OpalStatusCallCleared();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_OpalStatusCallCleared(void * jarg1) {
  OpalStatusCallCleared *arg1 = (OpalStatusCallCleared *) 0 ;
  
  arg1 = (OpalStatusCallCleared *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamCallCleared_callToken_set(void * jarg1, char * jarg2) {
  OpalParamCallCleared *arg1 = (OpalParamCallCleared *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalParamCallCleared *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_callToken = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_callToken, (const char *)arg2);
    } else {
      arg1->m_callToken = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalParamCallCleared_callToken_get(void * jarg1) {
  char * jresult ;
  OpalParamCallCleared *arg1 = (OpalParamCallCleared *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalParamCallCleared *)jarg1; 
  result = (char *) ((arg1)->m_callToken);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalParamCallCleared_reason_set(void * jarg1, int jarg2) {
  OpalParamCallCleared *arg1 = (OpalParamCallCleared *) 0 ;
  OpalCallEndReason arg2 ;
  
  arg1 = (OpalParamCallCleared *)jarg1; 
  arg2 = (OpalCallEndReason)jarg2; 
  if (arg1) (arg1)->m_reason = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_OpalParamCallCleared_reason_get(void * jarg1) {
  int jresult ;
  OpalParamCallCleared *arg1 = (OpalParamCallCleared *) 0 ;
  OpalCallEndReason result;
  
  arg1 = (OpalParamCallCleared *)jarg1; 
  result = (OpalCallEndReason) ((arg1)->m_reason);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_OpalParamCallCleared() {
  void * jresult ;
  OpalParamCallCleared *result = 0 ;
  
  result = (OpalParamCallCleared *)new OpalParamCallCleared();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_OpalParamCallCleared(void * jarg1) {
  OpalParamCallCleared *arg1 = (OpalParamCallCleared *) 0 ;
  
  arg1 = (OpalParamCallCleared *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalMessageParam_commandError_set(void * jarg1, char * jarg2) {
  OpalMessageParam *arg1 = (OpalMessageParam *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalMessageParam *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_commandError = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_commandError, (const char *)arg2);
    } else {
      arg1->m_commandError = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalMessageParam_commandError_get(void * jarg1) {
  char * jresult ;
  OpalMessageParam *arg1 = (OpalMessageParam *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalMessageParam *)jarg1; 
  result = (char *) ((arg1)->m_commandError);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalMessageParam_general_set(void * jarg1, void * jarg2) {
  OpalMessageParam *arg1 = (OpalMessageParam *) 0 ;
  OpalParamGeneral *arg2 = (OpalParamGeneral *) 0 ;
  
  arg1 = (OpalMessageParam *)jarg1; 
  arg2 = (OpalParamGeneral *)jarg2; 
  if (arg1) (arg1)->m_general = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalMessageParam_general_get(void * jarg1) {
  void * jresult ;
  OpalMessageParam *arg1 = (OpalMessageParam *) 0 ;
  OpalParamGeneral *result = 0 ;
  
  arg1 = (OpalMessageParam *)jarg1; 
  result = (OpalParamGeneral *)& ((arg1)->m_general);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalMessageParam_protocol_set(void * jarg1, void * jarg2) {
  OpalMessageParam *arg1 = (OpalMessageParam *) 0 ;
  OpalParamProtocol *arg2 = (OpalParamProtocol *) 0 ;
  
  arg1 = (OpalMessageParam *)jarg1; 
  arg2 = (OpalParamProtocol *)jarg2; 
  if (arg1) (arg1)->m_protocol = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalMessageParam_protocol_get(void * jarg1) {
  void * jresult ;
  OpalMessageParam *arg1 = (OpalMessageParam *) 0 ;
  OpalParamProtocol *result = 0 ;
  
  arg1 = (OpalMessageParam *)jarg1; 
  result = (OpalParamProtocol *)& ((arg1)->m_protocol);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalMessageParam_registrationInfo_set(void * jarg1, void * jarg2) {
  OpalMessageParam *arg1 = (OpalMessageParam *) 0 ;
  OpalParamRegistration *arg2 = (OpalParamRegistration *) 0 ;
  
  arg1 = (OpalMessageParam *)jarg1; 
  arg2 = (OpalParamRegistration *)jarg2; 
  if (arg1) (arg1)->m_registrationInfo = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalMessageParam_registrationInfo_get(void * jarg1) {
  void * jresult ;
  OpalMessageParam *arg1 = (OpalMessageParam *) 0 ;
  OpalParamRegistration *result = 0 ;
  
  arg1 = (OpalMessageParam *)jarg1; 
  result = (OpalParamRegistration *)& ((arg1)->m_registrationInfo);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalMessageParam_registrationStatus_set(void * jarg1, void * jarg2) {
  OpalMessageParam *arg1 = (OpalMessageParam *) 0 ;
  OpalStatusRegistration *arg2 = (OpalStatusRegistration *) 0 ;
  
  arg1 = (OpalMessageParam *)jarg1; 
  arg2 = (OpalStatusRegistration *)jarg2; 
  if (arg1) (arg1)->m_registrationStatus = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalMessageParam_registrationStatus_get(void * jarg1) {
  void * jresult ;
  OpalMessageParam *arg1 = (OpalMessageParam *) 0 ;
  OpalStatusRegistration *result = 0 ;
  
  arg1 = (OpalMessageParam *)jarg1; 
  result = (OpalStatusRegistration *)& ((arg1)->m_registrationStatus);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalMessageParam_callSetUp_set(void * jarg1, void * jarg2) {
  OpalMessageParam *arg1 = (OpalMessageParam *) 0 ;
  OpalParamSetUpCall *arg2 = (OpalParamSetUpCall *) 0 ;
  
  arg1 = (OpalMessageParam *)jarg1; 
  arg2 = (OpalParamSetUpCall *)jarg2; 
  if (arg1) (arg1)->m_callSetUp = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalMessageParam_callSetUp_get(void * jarg1) {
  void * jresult ;
  OpalMessageParam *arg1 = (OpalMessageParam *) 0 ;
  OpalParamSetUpCall *result = 0 ;
  
  arg1 = (OpalMessageParam *)jarg1; 
  result = (OpalParamSetUpCall *)& ((arg1)->m_callSetUp);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalMessageParam_callToken_set(void * jarg1, char * jarg2) {
  OpalMessageParam *arg1 = (OpalMessageParam *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalMessageParam *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if (arg2) {
      arg1->m_callToken = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_callToken, (const char *)arg2);
    } else {
      arg1->m_callToken = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalMessageParam_callToken_get(void * jarg1) {
  char * jresult ;
  OpalMessageParam *arg1 = (OpalMessageParam *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalMessageParam *)jarg1; 
  result = (char *) ((arg1)->m_callToken);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalMessageParam_incomingCall_set(void * jarg1, void * jarg2) {
  OpalMessageParam *arg1 = (OpalMessageParam *) 0 ;
  OpalStatusIncomingCall *arg2 = (OpalStatusIncomingCall *) 0 ;
  
  arg1 = (OpalMessageParam *)jarg1; 
  arg2 = (OpalStatusIncomingCall *)jarg2; 
  if (arg1) (arg1)->m_incomingCall = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalMessageParam_incomingCall_get(void * jarg1) {
  void * jresult ;
  OpalMessageParam *arg1 = (OpalMessageParam *) 0 ;
  OpalStatusIncomingCall *result = 0 ;
  
  arg1 = (OpalMessageParam *)jarg1; 
  result = (OpalStatusIncomingCall *)& ((arg1)->m_incomingCall);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalMessageParam_answerCall_set(void * jarg1, void * jarg2) {
  OpalMessageParam *arg1 = (OpalMessageParam *) 0 ;
  OpalParamAnswerCall *arg2 = (OpalParamAnswerCall *) 0 ;
  
  arg1 = (OpalMessageParam *)jarg1; 
  arg2 = (OpalParamAnswerCall *)jarg2; 
  if (arg1) (arg1)->m_answerCall = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalMessageParam_answerCall_get(void * jarg1) {
  void * jresult ;
  OpalMessageParam *arg1 = (OpalMessageParam *) 0 ;
  OpalParamAnswerCall *result = 0 ;
  
  arg1 = (OpalMessageParam *)jarg1; 
  result = (OpalParamAnswerCall *)& ((arg1)->m_answerCall);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalMessageParam_userInput_set(void * jarg1, void * jarg2) {
  OpalMessageParam *arg1 = (OpalMessageParam *) 0 ;
  OpalStatusUserInput *arg2 = (OpalStatusUserInput *) 0 ;
  
  arg1 = (OpalMessageParam *)jarg1; 
  arg2 = (OpalStatusUserInput *)jarg2; 
  if (arg1) (arg1)->m_userInput = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalMessageParam_userInput_get(void * jarg1) {
  void * jresult ;
  OpalMessageParam *arg1 = (OpalMessageParam *) 0 ;
  OpalStatusUserInput *result = 0 ;
  
  arg1 = (OpalMessageParam *)jarg1; 
  result = (OpalStatusUserInput *)& ((arg1)->m_userInput);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalMessageParam_messageWaiting_set(void * jarg1, void * jarg2) {
  OpalMessageParam *arg1 = (OpalMessageParam *) 0 ;
  OpalStatusMessageWaiting *arg2 = (OpalStatusMessageWaiting *) 0 ;
  
  arg1 = (OpalMessageParam *)jarg1; 
  arg2 = (OpalStatusMessageWaiting *)jarg2; 
  if (arg1) (arg1)->m_messageWaiting = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalMessageParam_messageWaiting_get(void * jarg1) {
  void * jresult ;
  OpalMessageParam *arg1 = (OpalMessageParam *) 0 ;
  OpalStatusMessageWaiting *result = 0 ;
  
  arg1 = (OpalMessageParam *)jarg1; 
  result = (OpalStatusMessageWaiting *)& ((arg1)->m_messageWaiting);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalMessageParam_lineAppearance_set(void * jarg1, void * jarg2) {
  OpalMessageParam *arg1 = (OpalMessageParam *) 0 ;
  OpalStatusLineAppearance *arg2 = (OpalStatusLineAppearance *) 0 ;
  
  arg1 = (OpalMessageParam *)jarg1; 
  arg2 = (OpalStatusLineAppearance *)jarg2; 
  if (arg1) (arg1)->m_lineAppearance = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalMessageParam_lineAppearance_get(void * jarg1) {
  void * jresult ;
  OpalMessageParam *arg1 = (OpalMessageParam *) 0 ;
  OpalStatusLineAppearance *result = 0 ;
  
  arg1 = (OpalMessageParam *)jarg1; 
  result = (OpalStatusLineAppearance *)& ((arg1)->m_lineAppearance);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalMessageParam_callCleared_set(void * jarg1, void * jarg2) {
  OpalMessageParam *arg1 = (OpalMessageParam *) 0 ;
  OpalStatusCallCleared *arg2 = (OpalStatusCallCleared *) 0 ;
  
  arg1 = (OpalMessageParam *)jarg1; 
  arg2 = (OpalStatusCallCleared *)jarg2; 
  if (arg1) (arg1)->m_callCleared = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalMessageParam_callCleared_get(void * jarg1) {
  void * jresult ;
  OpalMessageParam *arg1 = (OpalMessageParam *) 0 ;
  OpalStatusCallCleared *result = 0 ;
  
  arg1 = (OpalMessageParam *)jarg1; 
  result = (OpalStatusCallCleared *)& ((arg1)->m_callCleared);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalMessageParam_clearCall_set(void * jarg1, void * jarg2) {
  OpalMessageParam *arg1 = (OpalMessageParam *) 0 ;
  OpalParamCallCleared *arg2 = (OpalParamCallCleared *) 0 ;
  
  arg1 = (OpalMessageParam *)jarg1; 
  arg2 = (OpalParamCallCleared *)jarg2; 
  if (arg1) (arg1)->m_clearCall = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalMessageParam_clearCall_get(void * jarg1) {
  void * jresult ;
  OpalMessageParam *arg1 = (OpalMessageParam *) 0 ;
  OpalParamCallCleared *result = 0 ;
  
  arg1 = (OpalMessageParam *)jarg1; 
  result = (OpalParamCallCleared *)& ((arg1)->m_clearCall);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalMessageParam_mediaStream_set(void * jarg1, void * jarg2) {
  OpalMessageParam *arg1 = (OpalMessageParam *) 0 ;
  OpalStatusMediaStream *arg2 = (OpalStatusMediaStream *) 0 ;
  
  arg1 = (OpalMessageParam *)jarg1; 
  arg2 = (OpalStatusMediaStream *)jarg2; 
  if (arg1) (arg1)->m_mediaStream = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalMessageParam_mediaStream_get(void * jarg1) {
  void * jresult ;
  OpalMessageParam *arg1 = (OpalMessageParam *) 0 ;
  OpalStatusMediaStream *result = 0 ;
  
  arg1 = (OpalMessageParam *)jarg1; 
  result = (OpalStatusMediaStream *)& ((arg1)->m_mediaStream);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalMessageParam_setUserData_set(void * jarg1, void * jarg2) {
  OpalMessageParam *arg1 = (OpalMessageParam *) 0 ;
  OpalParamSetUserData *arg2 = (OpalParamSetUserData *) 0 ;
  
  arg1 = (OpalMessageParam *)jarg1; 
  arg2 = (OpalParamSetUserData *)jarg2; 
  if (arg1) (arg1)->m_setUserData = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalMessageParam_setUserData_get(void * jarg1) {
  void * jresult ;
  OpalMessageParam *arg1 = (OpalMessageParam *) 0 ;
  OpalParamSetUserData *result = 0 ;
  
  arg1 = (OpalMessageParam *)jarg1; 
  result = (OpalParamSetUserData *)& ((arg1)->m_setUserData);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalMessageParam_recording_set(void * jarg1, void * jarg2) {
  OpalMessageParam *arg1 = (OpalMessageParam *) 0 ;
  OpalParamRecording *arg2 = (OpalParamRecording *) 0 ;
  
  arg1 = (OpalMessageParam *)jarg1; 
  arg2 = (OpalParamRecording *)jarg2; 
  if (arg1) (arg1)->m_recording = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalMessageParam_recording_get(void * jarg1) {
  void * jresult ;
  OpalMessageParam *arg1 = (OpalMessageParam *) 0 ;
  OpalParamRecording *result = 0 ;
  
  arg1 = (OpalMessageParam *)jarg1; 
  result = (OpalParamRecording *)& ((arg1)->m_recording);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalMessageParam_transferStatus_set(void * jarg1, void * jarg2) {
  OpalMessageParam *arg1 = (OpalMessageParam *) 0 ;
  OpalStatusTransferCall *arg2 = (OpalStatusTransferCall *) 0 ;
  
  arg1 = (OpalMessageParam *)jarg1; 
  arg2 = (OpalStatusTransferCall *)jarg2; 
  if (arg1) (arg1)->m_transferStatus = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalMessageParam_transferStatus_get(void * jarg1) {
  void * jresult ;
  OpalMessageParam *arg1 = (OpalMessageParam *) 0 ;
  OpalStatusTransferCall *result = 0 ;
  
  arg1 = (OpalMessageParam *)jarg1; 
  result = (OpalStatusTransferCall *)& ((arg1)->m_transferStatus);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalMessageParam_ivrStatus_set(void * jarg1, void * jarg2) {
  OpalMessageParam *arg1 = (OpalMessageParam *) 0 ;
  OpalStatusIVR *arg2 = (OpalStatusIVR *) 0 ;
  
  arg1 = (OpalMessageParam *)jarg1; 
  arg2 = (OpalStatusIVR *)jarg2; 
  if (arg1) (arg1)->m_ivrStatus = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalMessageParam_ivrStatus_get(void * jarg1) {
  void * jresult ;
  OpalMessageParam *arg1 = (OpalMessageParam *) 0 ;
  OpalStatusIVR *result = 0 ;
  
  arg1 = (OpalMessageParam *)jarg1; 
  result = (OpalStatusIVR *)& ((arg1)->m_ivrStatus);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalMessageParam_presenceStatus_set(void * jarg1, void * jarg2) {
  OpalMessageParam *arg1 = (OpalMessageParam *) 0 ;
  OpalPresenceStatus *arg2 = (OpalPresenceStatus *) 0 ;
  
  arg1 = (OpalMessageParam *)jarg1; 
  arg2 = (OpalPresenceStatus *)jarg2; 
  if (arg1) (arg1)->m_presenceStatus = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalMessageParam_presenceStatus_get(void * jarg1) {
  void * jresult ;
  OpalMessageParam *arg1 = (OpalMessageParam *) 0 ;
  OpalPresenceStatus *result = 0 ;
  
  arg1 = (OpalMessageParam *)jarg1; 
  result = (OpalPresenceStatus *)& ((arg1)->m_presenceStatus);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalMessageParam_instantMessage_set(void * jarg1, void * jarg2) {
  OpalMessageParam *arg1 = (OpalMessageParam *) 0 ;
  OpalInstantMessage *arg2 = (OpalInstantMessage *) 0 ;
  
  arg1 = (OpalMessageParam *)jarg1; 
  arg2 = (OpalInstantMessage *)jarg2; 
  if (arg1) (arg1)->m_instantMessage = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalMessageParam_instantMessage_get(void * jarg1) {
  void * jresult ;
  OpalMessageParam *arg1 = (OpalMessageParam *) 0 ;
  OpalInstantMessage *result = 0 ;
  
  arg1 = (OpalMessageParam *)jarg1; 
  result = (OpalInstantMessage *)& ((arg1)->m_instantMessage);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_OpalMessageParam() {
  void * jresult ;
  OpalMessageParam *result = 0 ;
  
  result = (OpalMessageParam *)new OpalMessageParam();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_OpalMessageParam(void * jarg1) {
  OpalMessageParam *arg1 = (OpalMessageParam *) 0 ;
  
  arg1 = (OpalMessageParam *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalMessage_type_set(void * jarg1, int jarg2) {
  OpalMessage *arg1 = (OpalMessage *) 0 ;
  OpalMessageType arg2 ;
  
  arg1 = (OpalMessage *)jarg1; 
  arg2 = (OpalMessageType)jarg2; 
  if (arg1) (arg1)->m_type = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_OpalMessage_type_get(void * jarg1) {
  int jresult ;
  OpalMessage *arg1 = (OpalMessage *) 0 ;
  OpalMessageType result;
  
  arg1 = (OpalMessage *)jarg1; 
  result = (OpalMessageType) ((arg1)->m_type);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalMessage_param_set(void * jarg1, void * jarg2) {
  OpalMessage *arg1 = (OpalMessage *) 0 ;
  OpalMessageParam *arg2 = (OpalMessageParam *) 0 ;
  
  arg1 = (OpalMessage *)jarg1; 
  arg2 = (OpalMessageParam *)jarg2; 
  if (arg1) (arg1)->m_param = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalMessage_param_get(void * jarg1) {
  void * jresult ;
  OpalMessage *arg1 = (OpalMessage *) 0 ;
  OpalMessageParam *result = 0 ;
  
  arg1 = (OpalMessage *)jarg1; 
  result = (OpalMessageParam *)& ((arg1)->m_param);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_OpalMessage() {
  void * jresult ;
  OpalMessage *result = 0 ;
  
  result = (OpalMessage *)new OpalMessage();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_OpalMessage(void * jarg1) {
  OpalMessage *arg1 = (OpalMessage *) 0 ;
  
  arg1 = (OpalMessage *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_OpalMessagePtr__SWIG_0(int jarg1) {
  void * jresult ;
  OpalMessageType arg1 ;
  OpalMessagePtr *result = 0 ;
  
  arg1 = (OpalMessageType)jarg1; 
  result = (OpalMessagePtr *)new OpalMessagePtr(arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_OpalMessagePtr__SWIG_1() {
  void * jresult ;
  OpalMessagePtr *result = 0 ;
  
  result = (OpalMessagePtr *)new OpalMessagePtr();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_OpalMessagePtr(void * jarg1) {
  OpalMessagePtr *arg1 = (OpalMessagePtr *) 0 ;
  
  arg1 = (OpalMessagePtr *)jarg1; 
  delete arg1;
}


SWIGEXPORT int SWIGSTDCALL CSharp_OpalMessagePtr_GetType(void * jarg1) {
  int jresult ;
  OpalMessagePtr *arg1 = (OpalMessagePtr *) 0 ;
  OpalMessageType result;
  
  arg1 = (OpalMessagePtr *)jarg1; 
  result = (OpalMessageType)((OpalMessagePtr const *)arg1)->GetType();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalMessagePtr_SetType(void * jarg1, int jarg2) {
  OpalMessagePtr *arg1 = (OpalMessagePtr *) 0 ;
  OpalMessageType arg2 ;
  
  arg1 = (OpalMessagePtr *)jarg1; 
  arg2 = (OpalMessageType)jarg2; 
  (arg1)->SetType(arg2);
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalMessagePtr_GetCallToken(void * jarg1) {
  char * jresult ;
  OpalMessagePtr *arg1 = (OpalMessagePtr *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalMessagePtr *)jarg1; 
  result = (char *)((OpalMessagePtr const *)arg1)->GetCallToken();
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalMessagePtr_SetCallToken(void * jarg1, char * jarg2) {
  OpalMessagePtr *arg1 = (OpalMessagePtr *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (OpalMessagePtr *)jarg1; 
  arg2 = (char *)jarg2; 
  (arg1)->SetCallToken((char const *)arg2);
}


SWIGEXPORT char * SWIGSTDCALL CSharp_OpalMessagePtr_GetCommandError(void * jarg1) {
  char * jresult ;
  OpalMessagePtr *arg1 = (OpalMessagePtr *) 0 ;
  char *result = 0 ;
  
  arg1 = (OpalMessagePtr *)jarg1; 
  result = (char *)((OpalMessagePtr const *)arg1)->GetCommandError();
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalMessagePtr_GetGeneralParams(void * jarg1) {
  void * jresult ;
  OpalMessagePtr *arg1 = (OpalMessagePtr *) 0 ;
  OpalParamGeneral *result = 0 ;
  
  arg1 = (OpalMessagePtr *)jarg1; 
  result = (OpalParamGeneral *)((OpalMessagePtr const *)arg1)->GetGeneralParams();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalMessagePtr_GetProtocolParams(void * jarg1) {
  void * jresult ;
  OpalMessagePtr *arg1 = (OpalMessagePtr *) 0 ;
  OpalParamProtocol *result = 0 ;
  
  arg1 = (OpalMessagePtr *)jarg1; 
  result = (OpalParamProtocol *)((OpalMessagePtr const *)arg1)->GetProtocolParams();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalMessagePtr_GetRegistrationParams(void * jarg1) {
  void * jresult ;
  OpalMessagePtr *arg1 = (OpalMessagePtr *) 0 ;
  OpalParamRegistration *result = 0 ;
  
  arg1 = (OpalMessagePtr *)jarg1; 
  result = (OpalParamRegistration *)((OpalMessagePtr const *)arg1)->GetRegistrationParams();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalMessagePtr_GetRegistrationStatus(void * jarg1) {
  void * jresult ;
  OpalMessagePtr *arg1 = (OpalMessagePtr *) 0 ;
  OpalStatusRegistration *result = 0 ;
  
  arg1 = (OpalMessagePtr *)jarg1; 
  result = (OpalStatusRegistration *)((OpalMessagePtr const *)arg1)->GetRegistrationStatus();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalMessagePtr_GetCallSetUp(void * jarg1) {
  void * jresult ;
  OpalMessagePtr *arg1 = (OpalMessagePtr *) 0 ;
  OpalParamSetUpCall *result = 0 ;
  
  arg1 = (OpalMessagePtr *)jarg1; 
  result = (OpalParamSetUpCall *)((OpalMessagePtr const *)arg1)->GetCallSetUp();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalMessagePtr_GetIncomingCall(void * jarg1) {
  void * jresult ;
  OpalMessagePtr *arg1 = (OpalMessagePtr *) 0 ;
  OpalStatusIncomingCall *result = 0 ;
  
  arg1 = (OpalMessagePtr *)jarg1; 
  result = (OpalStatusIncomingCall *)((OpalMessagePtr const *)arg1)->GetIncomingCall();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalMessagePtr_GetAnswerCall(void * jarg1) {
  void * jresult ;
  OpalMessagePtr *arg1 = (OpalMessagePtr *) 0 ;
  OpalParamAnswerCall *result = 0 ;
  
  arg1 = (OpalMessagePtr *)jarg1; 
  result = (OpalParamAnswerCall *)((OpalMessagePtr const *)arg1)->GetAnswerCall();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalMessagePtr_GetUserInput(void * jarg1) {
  void * jresult ;
  OpalMessagePtr *arg1 = (OpalMessagePtr *) 0 ;
  OpalStatusUserInput *result = 0 ;
  
  arg1 = (OpalMessagePtr *)jarg1; 
  result = (OpalStatusUserInput *)((OpalMessagePtr const *)arg1)->GetUserInput();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalMessagePtr_GetMessageWaiting(void * jarg1) {
  void * jresult ;
  OpalMessagePtr *arg1 = (OpalMessagePtr *) 0 ;
  OpalStatusMessageWaiting *result = 0 ;
  
  arg1 = (OpalMessagePtr *)jarg1; 
  result = (OpalStatusMessageWaiting *)((OpalMessagePtr const *)arg1)->GetMessageWaiting();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalMessagePtr_GetLineAppearance(void * jarg1) {
  void * jresult ;
  OpalMessagePtr *arg1 = (OpalMessagePtr *) 0 ;
  OpalStatusLineAppearance *result = 0 ;
  
  arg1 = (OpalMessagePtr *)jarg1; 
  result = (OpalStatusLineAppearance *)((OpalMessagePtr const *)arg1)->GetLineAppearance();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalMessagePtr_GetCallCleared(void * jarg1) {
  void * jresult ;
  OpalMessagePtr *arg1 = (OpalMessagePtr *) 0 ;
  OpalStatusCallCleared *result = 0 ;
  
  arg1 = (OpalMessagePtr *)jarg1; 
  result = (OpalStatusCallCleared *)((OpalMessagePtr const *)arg1)->GetCallCleared();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalMessagePtr_GetClearCall(void * jarg1) {
  void * jresult ;
  OpalMessagePtr *arg1 = (OpalMessagePtr *) 0 ;
  OpalParamCallCleared *result = 0 ;
  
  arg1 = (OpalMessagePtr *)jarg1; 
  result = (OpalParamCallCleared *)((OpalMessagePtr const *)arg1)->GetClearCall();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalMessagePtr_GetMediaStream(void * jarg1) {
  void * jresult ;
  OpalMessagePtr *arg1 = (OpalMessagePtr *) 0 ;
  OpalStatusMediaStream *result = 0 ;
  
  arg1 = (OpalMessagePtr *)jarg1; 
  result = (OpalStatusMediaStream *)((OpalMessagePtr const *)arg1)->GetMediaStream();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalMessagePtr_GetSetUserData(void * jarg1) {
  void * jresult ;
  OpalMessagePtr *arg1 = (OpalMessagePtr *) 0 ;
  OpalParamSetUserData *result = 0 ;
  
  arg1 = (OpalMessagePtr *)jarg1; 
  result = (OpalParamSetUserData *)((OpalMessagePtr const *)arg1)->GetSetUserData();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalMessagePtr_GetRecording(void * jarg1) {
  void * jresult ;
  OpalMessagePtr *arg1 = (OpalMessagePtr *) 0 ;
  OpalParamRecording *result = 0 ;
  
  arg1 = (OpalMessagePtr *)jarg1; 
  result = (OpalParamRecording *)((OpalMessagePtr const *)arg1)->GetRecording();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalMessagePtr_GetTransferStatus(void * jarg1) {
  void * jresult ;
  OpalMessagePtr *arg1 = (OpalMessagePtr *) 0 ;
  OpalStatusTransferCall *result = 0 ;
  
  arg1 = (OpalMessagePtr *)jarg1; 
  result = (OpalStatusTransferCall *)((OpalMessagePtr const *)arg1)->GetTransferStatus();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalMessagePtr_GetPresenceStatus(void * jarg1) {
  void * jresult ;
  OpalMessagePtr *arg1 = (OpalMessagePtr *) 0 ;
  OpalPresenceStatus *result = 0 ;
  
  arg1 = (OpalMessagePtr *)jarg1; 
  result = (OpalPresenceStatus *)((OpalMessagePtr const *)arg1)->GetPresenceStatus();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_OpalMessagePtr_GetInstantMessage(void * jarg1) {
  void * jresult ;
  OpalMessagePtr *arg1 = (OpalMessagePtr *) 0 ;
  OpalInstantMessage *result = 0 ;
  
  arg1 = (OpalMessagePtr *)jarg1; 
  result = (OpalInstantMessage *)((OpalMessagePtr const *)arg1)->GetInstantMessage();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_OpalContext() {
  void * jresult ;
  OpalContext *result = 0 ;
  
  result = (OpalContext *)new OpalContext();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_OpalContext(void * jarg1) {
  OpalContext *arg1 = (OpalContext *) 0 ;
  
  arg1 = (OpalContext *)jarg1; 
  delete arg1;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_OpalContext_Initialise__SWIG_0(void * jarg1, char * jarg2, unsigned int jarg3) {
  unsigned int jresult ;
  OpalContext *arg1 = (OpalContext *) 0 ;
  char *arg2 = (char *) 0 ;
  unsigned int arg3 ;
  unsigned int result;
  
  arg1 = (OpalContext *)jarg1; 
  arg2 = (char *)jarg2; 
  arg3 = (unsigned int)jarg3; 
  result = (unsigned int)(arg1)->Initialise((char const *)arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_OpalContext_Initialise__SWIG_1(void * jarg1, char * jarg2) {
  unsigned int jresult ;
  OpalContext *arg1 = (OpalContext *) 0 ;
  char *arg2 = (char *) 0 ;
  unsigned int result;
  
  arg1 = (OpalContext *)jarg1; 
  arg2 = (char *)jarg2; 
  result = (unsigned int)(arg1)->Initialise((char const *)arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_OpalContext_IsInitialised(void * jarg1) {
  unsigned int jresult ;
  OpalContext *arg1 = (OpalContext *) 0 ;
  bool result;
  
  arg1 = (OpalContext *)jarg1; 
  result = (bool)((OpalContext const *)arg1)->IsInitialised();
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_OpalContext_ShutDown(void * jarg1) {
  OpalContext *arg1 = (OpalContext *) 0 ;
  
  arg1 = (OpalContext *)jarg1; 
  (arg1)->ShutDown();
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_OpalContext_GetMessage__SWIG_0(void * jarg1, void * jarg2, unsigned int jarg3) {
  unsigned int jresult ;
  OpalContext *arg1 = (OpalContext *) 0 ;
  OpalMessagePtr *arg2 = 0 ;
  unsigned int arg3 ;
  bool result;
  
  arg1 = (OpalContext *)jarg1; 
  arg2 = (OpalMessagePtr *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OpalMessagePtr & type is null", 0);
    return 0;
  } 
  arg3 = (unsigned int)jarg3; 
  result = (bool)(arg1)->GetMessage(*arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_OpalContext_GetMessage__SWIG_1(void * jarg1, void * jarg2) {
  unsigned int jresult ;
  OpalContext *arg1 = (OpalContext *) 0 ;
  OpalMessagePtr *arg2 = 0 ;
  bool result;
  
  arg1 = (OpalContext *)jarg1; 
  arg2 = (OpalMessagePtr *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OpalMessagePtr & type is null", 0);
    return 0;
  } 
  result = (bool)(arg1)->GetMessage(*arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_OpalContext_SendMessage(void * jarg1, void * jarg2, void * jarg3) {
  unsigned int jresult ;
  OpalContext *arg1 = (OpalContext *) 0 ;
  OpalMessagePtr *arg2 = 0 ;
  OpalMessagePtr *arg3 = 0 ;
  bool result;
  
  arg1 = (OpalContext *)jarg1; 
  arg2 = (OpalMessagePtr *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OpalMessagePtr const & type is null", 0);
    return 0;
  } 
  arg3 = (OpalMessagePtr *)jarg3;
  if (!arg3) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OpalMessagePtr & type is null", 0);
    return 0;
  } 
  result = (bool)(arg1)->SendMessage((OpalMessagePtr const &)*arg2,*arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_OpalContext_SetUpCall__SWIG_0(void * jarg1, void * jarg2, char * jarg3, char * jarg4, char * jarg5) {
  unsigned int jresult ;
  OpalContext *arg1 = (OpalContext *) 0 ;
  OpalMessagePtr *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  bool result;
  
  arg1 = (OpalContext *)jarg1; 
  arg2 = (OpalMessagePtr *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OpalMessagePtr & type is null", 0);
    return 0;
  } 
  arg3 = (char *)jarg3; 
  arg4 = (char *)jarg4; 
  arg5 = (char *)jarg5; 
  result = (bool)(arg1)->SetUpCall(*arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_OpalContext_SetUpCall__SWIG_1(void * jarg1, void * jarg2, char * jarg3, char * jarg4) {
  unsigned int jresult ;
  OpalContext *arg1 = (OpalContext *) 0 ;
  OpalMessagePtr *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  bool result;
  
  arg1 = (OpalContext *)jarg1; 
  arg2 = (OpalMessagePtr *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OpalMessagePtr & type is null", 0);
    return 0;
  } 
  arg3 = (char *)jarg3; 
  arg4 = (char *)jarg4; 
  result = (bool)(arg1)->SetUpCall(*arg2,(char const *)arg3,(char const *)arg4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_OpalContext_SetUpCall__SWIG_2(void * jarg1, void * jarg2, char * jarg3) {
  unsigned int jresult ;
  OpalContext *arg1 = (OpalContext *) 0 ;
  OpalMessagePtr *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  bool result;
  
  arg1 = (OpalContext *)jarg1; 
  arg2 = (OpalMessagePtr *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "OpalMessagePtr & type is null", 0);
    return 0;
  } 
  arg3 = (char *)jarg3; 
  result = (bool)(arg1)->SetUpCall(*arg2,(char const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_OpalContext_AnswerCall(void * jarg1, char * jarg2) {
  unsigned int jresult ;
  OpalContext *arg1 = (OpalContext *) 0 ;
  char *arg2 = (char *) 0 ;
  bool result;
  
  arg1 = (OpalContext *)jarg1; 
  arg2 = (char *)jarg2; 
  result = (bool)(arg1)->AnswerCall((char const *)arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_OpalContext_ClearCall__SWIG_0(void * jarg1, char * jarg2, int jarg3) {
  unsigned int jresult ;
  OpalContext *arg1 = (OpalContext *) 0 ;
  char *arg2 = (char *) 0 ;
  OpalCallEndReason arg3 ;
  bool result;
  
  arg1 = (OpalContext *)jarg1; 
  arg2 = (char *)jarg2; 
  arg3 = (OpalCallEndReason)jarg3; 
  result = (bool)(arg1)->ClearCall((char const *)arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_OpalContext_ClearCall__SWIG_1(void * jarg1, char * jarg2) {
  unsigned int jresult ;
  OpalContext *arg1 = (OpalContext *) 0 ;
  char *arg2 = (char *) 0 ;
  bool result;
  
  arg1 = (OpalContext *)jarg1; 
  arg2 = (char *)jarg2; 
  result = (bool)(arg1)->ClearCall((char const *)arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_OpalContext_SendUserInput__SWIG_0(void * jarg1, char * jarg2, char * jarg3, unsigned int jarg4) {
  unsigned int jresult ;
  OpalContext *arg1 = (OpalContext *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  unsigned int arg4 ;
  bool result;
  
  arg1 = (OpalContext *)jarg1; 
  arg2 = (char *)jarg2; 
  arg3 = (char *)jarg3; 
  arg4 = (unsigned int)jarg4; 
  result = (bool)(arg1)->SendUserInput((char const *)arg2,(char const *)arg3,arg4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_OpalContext_SendUserInput__SWIG_1(void * jarg1, char * jarg2, char * jarg3) {
  unsigned int jresult ;
  OpalContext *arg1 = (OpalContext *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  bool result;
  
  arg1 = (OpalContext *)jarg1; 
  arg2 = (char *)jarg2; 
  arg3 = (char *)jarg3; 
  result = (bool)(arg1)->SendUserInput((char const *)arg2,(char const *)arg3);
  jresult = result; 
  return jresult;
}


#ifdef __cplusplus
}
#endif

